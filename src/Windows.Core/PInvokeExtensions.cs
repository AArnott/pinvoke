// Copyright (c) to owners found in https://github.com/AArnott/pinvoke/blob/master/COPYRIGHT.md. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.

namespace PInvoke
{
    using System;
    using System.Runtime.InteropServices;

    /// <summary>
    /// Extension methods for commonly defined types.
    /// </summary>
    public static class PInvokeExtensions
    {
        /// <summary>
        /// Converts an HRESULT to <see cref="NTStatus"/>
        /// </summary>
        /// <param name="hresult">The HRESULT.</param>
        /// <returns>The <see cref="NTStatus"/>.</returns>
        public static NTStatus ToNTStatus(int hresult)
        {
            return (NTStatus)((hresult & 0xC0007FFF) | ((int)NTStatus.FACILITY_FILTER_MANAGER << 16) | 0x40000000);
        }

        /// <summary>
        /// Converts an NTStatus to an HRESULT.
        /// </summary>
        /// <param name="status">The <see cref="NTStatus"/> to convert.</param>
        /// <returns>The HRESULT.</returns>
        public static int ToHResult(this NTStatus status)
        {
            // From winerror.h
            // #define HRESULT_FROM_NT(x)      ((HRESULT) ((x) | FACILITY_NT_BIT))
            return (int)status | (int)NTStatusFacilities.NTStatusFacility;
        }

        /// <summary>
        /// Throws an exception if a P/Invoke failed.
        /// </summary>
        /// <param name="status">The result of the P/Invoke call.</param>
        public static void ThrowOnError(this NTStatus status)
        {
            if ((int)status < 0)
            {
                Marshal.ThrowExceptionForHR(status.ToHResult());
            }
        }

        /// <summary>
        /// Translates an <see cref="NTStatus"/> to an <see cref="Win32ErrorCode"/>.
        /// </summary>
        /// <param name="status">The error to translate.</param>
        /// <returns>The translated value.</returns>
        /// <exception cref="ArgumentException">Thrown if the error could not be converted.</exception>
        public static Win32ErrorCode ToWin32ErrorCode(this NTStatus status)
        {
            // The translation table used for this switch statement came from:
            // https://support.microsoft.com/en-us/kb/113996
            switch (status)
            {
                case NTStatus.STATUS_DATATYPE_MISALIGNMENT: return Win32ErrorCode.ERROR_NOACCESS;
                case NTStatus.STATUS_ACCESS_VIOLATION: return Win32ErrorCode.ERROR_NOACCESS;
                case NTStatus.STATUS_DATATYPE_MISALIGNMENT_ERROR: return Win32ErrorCode.ERROR_NOACCESS;
                case NTStatus.STATUS_CTL_FILE_NOT_SUPPORTED: return Win32ErrorCode.ERROR_NOT_SUPPORTED;
                case NTStatus.STATUS_PORT_ALREADY_SET: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_SECTION_NOT_IMAGE: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_BAD_WORKING_SET_LIMIT: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_WORKING_SET_LIMIT_RANGE: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_INCOMPATIBLE_FILE_MAP: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_PORT_DISCONNECTED: return Win32ErrorCode.ERROR_INVALID_HANDLE;
                case NTStatus.STATUS_NOT_LOCKED: return Win32ErrorCode.ERROR_NOT_LOCKED;
                case NTStatus.STATUS_NOT_MAPPED_VIEW: return Win32ErrorCode.ERROR_INVALID_ADDRESS;
                case NTStatus.STATUS_UNABLE_TO_FREE_VM: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_UNABLE_TO_DELETE_SECTION: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_MORE_PROCESSING_REQUIRED: return Win32ErrorCode.ERROR_MORE_DATA;
                case NTStatus.STATUS_INVALID_CID: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_STACK_OVERFLOW: return Win32ErrorCode.ERROR_STACK_OVERFLOW;
                case NTStatus.STATUS_BAD_INITIAL_STACK: return Win32ErrorCode.ERROR_STACK_OVERFLOW;
                case NTStatus.STATUS_INVALID_VOLUME_LABEL: return Win32ErrorCode.ERROR_LABEL_TOO_LONG;
                case NTStatus.STATUS_SECTION_NOT_EXTENDED: return Win32ErrorCode.ERROR_OUTOFMEMORY;
                case NTStatus.STATUS_NOT_MAPPED_DATA: return Win32ErrorCode.ERROR_INVALID_ADDRESS;
                case NTStatus.STATUS_NO_LDT: return Win32ErrorCode.ERROR_INVALID_THREAD_ID;
                case NTStatus.STATUS_INFO_LENGTH_MISMATCH: return Win32ErrorCode.ERROR_BAD_LENGTH;
                case NTStatus.STATUS_INVALID_INFO_CLASS: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_SUSPEND_COUNT_EXCEEDED: return Win32ErrorCode.ERROR_SIGNAL_REFUSED;
                case NTStatus.STATUS_NOTIFY_ENUM_DIR: return Win32ErrorCode.ERROR_NOTIFY_ENUM_DIR;
                case NTStatus.STATUS_REGISTRY_RECOVERED: return Win32ErrorCode.ERROR_REGISTRY_RECOVERED;
                case NTStatus.STATUS_REGISTRY_IO_FAILED: return Win32ErrorCode.ERROR_REGISTRY_IO_FAILED;
                case NTStatus.STATUS_NOT_REGISTRY_FILE: return Win32ErrorCode.ERROR_NOT_REGISTRY_FILE;
                case NTStatus.STATUS_KEY_DELETED: return Win32ErrorCode.ERROR_KEY_DELETED;
                case NTStatus.STATUS_NO_LOG_SPACE: return Win32ErrorCode.ERROR_NO_LOG_SPACE;
                case NTStatus.STATUS_KEY_HAS_CHILDREN: return Win32ErrorCode.ERROR_KEY_HAS_CHILDREN;
                case NTStatus.STATUS_CHILD_MUST_BE_VOLATILE: return Win32ErrorCode.ERROR_CHILD_MUST_BE_VOLATILE;
                case NTStatus.STATUS_REGISTRY_CORRUPT: return Win32ErrorCode.ERROR_BADDB;
                case NTStatus.STATUS_DLL_NOT_FOUND: return Win32ErrorCode.ERROR_MOD_NOT_FOUND;
                case NTStatus.STATUS_DLL_INIT_FAILED: return Win32ErrorCode.ERROR_DLL_INIT_FAILED;
                case NTStatus.STATUS_INVALID_IMPORT_OF_NON_DLL: return Win32ErrorCode.ERROR_INVALID_IMPORT_OF_NON_DLL;
                case NTStatus.STATUS_ORDINAL_NOT_FOUND: return Win32ErrorCode.ERROR_INVALID_ORDINAL;
                case NTStatus.STATUS_DRIVER_ORDINAL_NOT_FOUND: return Win32ErrorCode.ERROR_INVALID_ORDINAL;
                case NTStatus.STATUS_DRIVER_UNABLE_TO_LOAD: return Win32ErrorCode.ERROR_BAD_DRIVER;
                case NTStatus.STATUS_ENTRYPOINT_NOT_FOUND: return Win32ErrorCode.ERROR_PROC_NOT_FOUND;
                case NTStatus.STATUS_DRIVER_ENTRYPOINT_NOT_FOUND: return Win32ErrorCode.ERROR_PROC_NOT_FOUND;
                case NTStatus.STATUS_PENDING: return Win32ErrorCode.ERROR_IO_PENDING;
                case NTStatus.STATUS_MORE_ENTRIES: return Win32ErrorCode.ERROR_MORE_DATA;
                case NTStatus.STATUS_INTEGER_OVERFLOW: return Win32ErrorCode.ERROR_ARITHMETIC_OVERFLOW;
                case NTStatus.STATUS_BUFFER_OVERFLOW: return Win32ErrorCode.ERROR_MORE_DATA;
                case NTStatus.STATUS_NO_MORE_FILES: return Win32ErrorCode.ERROR_NO_MORE_FILES;
                case NTStatus.STATUS_NO_INHERITANCE: return Win32ErrorCode.ERROR_NO_INHERITANCE;
                case NTStatus.STATUS_NO_MORE_EAS: return Win32ErrorCode.ERROR_NO_MORE_ITEMS;
                case NTStatus.STATUS_NO_MORE_ENTRIES: return Win32ErrorCode.ERROR_NO_MORE_ITEMS;
                case NTStatus.STATUS_GUIDS_EXHAUSTED: return Win32ErrorCode.ERROR_NO_MORE_ITEMS;
                case NTStatus.STATUS_AGENTS_EXHAUSTED: return Win32ErrorCode.ERROR_NO_MORE_ITEMS;
                case NTStatus.STATUS_UNSUCCESSFUL: return Win32ErrorCode.ERROR_GEN_FAILURE;
                case NTStatus.STATUS_TOO_MANY_LINKS: return Win32ErrorCode.ERROR_TOO_MANY_LINKS;
                case NTStatus.STATUS_NOT_IMPLEMENTED: return Win32ErrorCode.ERROR_INVALID_FUNCTION;
                case NTStatus.STATUS_ILLEGAL_FUNCTION: return Win32ErrorCode.ERROR_INVALID_FUNCTION;
                case NTStatus.STATUS_IN_PAGE_ERROR: return Win32ErrorCode.ERROR_SWAPERROR;
                case NTStatus.STATUS_PAGEFILE_QUOTA: return Win32ErrorCode.ERROR_PAGEFILE_QUOTA;
                case NTStatus.STATUS_COMMITMENT_LIMIT: return Win32ErrorCode.ERROR_COMMITMENT_LIMIT;
                case NTStatus.STATUS_SECTION_TOO_BIG: return Win32ErrorCode.ERROR_NOT_ENOUGH_MEMORY;
                case NTStatus.RPC_NT_SS_IN_NULL_CONTEXT: return Win32ErrorCode.ERROR_INVALID_HANDLE;
                case NTStatus.RPC_NT_INVALID_BINDING: return Win32ErrorCode.ERROR_INVALID_HANDLE;
                case NTStatus.STATUS_INVALID_HANDLE: return Win32ErrorCode.ERROR_INVALID_HANDLE;
                case NTStatus.STATUS_OBJECT_TYPE_MISMATCH: return Win32ErrorCode.ERROR_INVALID_HANDLE;
                case NTStatus.STATUS_FILE_CLOSED: return Win32ErrorCode.ERROR_INVALID_HANDLE;
                case NTStatus.STATUS_INVALID_PORT_HANDLE: return Win32ErrorCode.ERROR_INVALID_HANDLE;
                case NTStatus.STATUS_HANDLE_NOT_CLOSABLE: return Win32ErrorCode.ERROR_INVALID_HANDLE;
                case NTStatus.STATUS_NOT_COMMITTED: return Win32ErrorCode.ERROR_INVALID_ADDRESS;
                case NTStatus.STATUS_PARTIAL_COPY: return Win32ErrorCode.ERROR_PARTIAL_COPY;
                case NTStatus.STATUS_LPC_REPLY_LOST: return Win32ErrorCode.ERROR_INTERNAL_ERROR;
                case NTStatus.STATUS_INVALID_PARAMETER: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_INVALID_PARAMETER_1: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_INVALID_PARAMETER_2: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_INVALID_PARAMETER_3: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_INVALID_PARAMETER_4: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_INVALID_PARAMETER_5: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_INVALID_PARAMETER_6: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_INVALID_PARAMETER_7: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_INVALID_PARAMETER_8: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_INVALID_PARAMETER_9: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_INVALID_PARAMETER_10: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_INVALID_PARAMETER_11: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_INVALID_PARAMETER_12: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_INVALID_PARAMETER_MIX: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_INVALID_PAGE_PROTECTION: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_SECTION_PROTECTION: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_RESOURCE_DATA_NOT_FOUND: return Win32ErrorCode.ERROR_RESOURCE_DATA_NOT_FOUND;
                case NTStatus.STATUS_RESOURCE_TYPE_NOT_FOUND: return Win32ErrorCode.ERROR_RESOURCE_TYPE_NOT_FOUND;
                case NTStatus.STATUS_RESOURCE_NAME_NOT_FOUND: return Win32ErrorCode.ERROR_RESOURCE_NAME_NOT_FOUND;
                case NTStatus.STATUS_RESOURCE_LANG_NOT_FOUND: return Win32ErrorCode.ERROR_RESOURCE_LANG_NOT_FOUND;
                case NTStatus.STATUS_NO_SUCH_DEVICE: return Win32ErrorCode.ERROR_FILE_NOT_FOUND;
                case NTStatus.STATUS_NO_SUCH_FILE: return Win32ErrorCode.ERROR_FILE_NOT_FOUND;
                case NTStatus.STATUS_INVALID_DEVICE_REQUEST: return Win32ErrorCode.ERROR_INVALID_FUNCTION;
                case NTStatus.STATUS_VOLUME_NOT_UPGRADED: return Win32ErrorCode.ERROR_INVALID_FUNCTION;
                case NTStatus.STATUS_END_OF_FILE: return Win32ErrorCode.ERROR_HANDLE_EOF;
                case NTStatus.STATUS_FILE_FORCED_CLOSED: return Win32ErrorCode.ERROR_HANDLE_EOF;
                case NTStatus.STATUS_WRONG_VOLUME: return Win32ErrorCode.ERROR_WRONG_DISK;
                case NTStatus.STATUS_NO_MEDIA: return Win32ErrorCode.ERROR_NO_MEDIA_IN_DRIVE;
                case NTStatus.STATUS_NO_MEDIA_IN_DEVICE: return Win32ErrorCode.ERROR_NOT_READY;
                case NTStatus.STATUS_VOLUME_DISMOUNTED: return Win32ErrorCode.ERROR_NOT_READY;
                case NTStatus.STATUS_NONEXISTENT_SECTOR: return Win32ErrorCode.ERROR_SECTOR_NOT_FOUND;
                case NTStatus.STATUS_WORKING_SET_QUOTA: return Win32ErrorCode.ERROR_WORKING_SET_QUOTA;
                case NTStatus.STATUS_NO_MEMORY: return Win32ErrorCode.ERROR_NOT_ENOUGH_MEMORY;
                case NTStatus.STATUS_CONFLICTING_ADDRESSES: return Win32ErrorCode.ERROR_INVALID_ADDRESS;
                case NTStatus.STATUS_INVALID_SYSTEM_SERVICE: return Win32ErrorCode.ERROR_INVALID_FUNCTION;
                case NTStatus.STATUS_THREAD_IS_TERMINATING: return Win32ErrorCode.ERROR_ACCESS_DENIED;
                case NTStatus.STATUS_PROCESS_IS_TERMINATING: return Win32ErrorCode.ERROR_ACCESS_DENIED;
                case NTStatus.STATUS_INVALID_LOCK_SEQUENCE: return Win32ErrorCode.ERROR_ACCESS_DENIED;
                case NTStatus.STATUS_INVALID_VIEW_SIZE: return Win32ErrorCode.ERROR_ACCESS_DENIED;
                case NTStatus.STATUS_ALREADY_COMMITTED: return Win32ErrorCode.ERROR_ACCESS_DENIED;
                case NTStatus.STATUS_ACCESS_DENIED: return Win32ErrorCode.ERROR_ACCESS_DENIED;
                case NTStatus.STATUS_FILE_IS_A_DIRECTORY: return Win32ErrorCode.ERROR_ACCESS_DENIED;
                case NTStatus.STATUS_CANNOT_DELETE: return Win32ErrorCode.ERROR_ACCESS_DENIED;
                case NTStatus.STATUS_INVALID_COMPUTER_NAME: return Win32ErrorCode.ERROR_INVALID_COMPUTERNAME;
                case NTStatus.STATUS_FILE_DELETED: return Win32ErrorCode.ERROR_ACCESS_DENIED;
                case NTStatus.STATUS_FILE_RENAMED: return Win32ErrorCode.ERROR_ACCESS_DENIED;
                case NTStatus.STATUS_DELETE_PENDING: return Win32ErrorCode.ERROR_ACCESS_DENIED;
                case NTStatus.STATUS_PORT_CONNECTION_REFUSED: return Win32ErrorCode.ERROR_ACCESS_DENIED;
                case NTStatus.STATUS_NO_SUCH_PRIVILEGE: return Win32ErrorCode.ERROR_NO_SUCH_PRIVILEGE;
                case NTStatus.STATUS_PRIVILEGE_NOT_HELD: return Win32ErrorCode.ERROR_PRIVILEGE_NOT_HELD;
                case NTStatus.STATUS_CANNOT_IMPERSONATE: return Win32ErrorCode.ERROR_CANNOT_IMPERSONATE;
                case NTStatus.STATUS_LOGON_FAILURE: return Win32ErrorCode.ERROR_LOGON_FAILURE;
                case NTStatus.STATUS_MUTUAL_AUTHENTICATION_FAILED: return Win32ErrorCode.ERROR_MUTUAL_AUTH_FAILED;
                case NTStatus.STATUS_TIME_DIFFERENCE_AT_DC: return Win32ErrorCode.ERROR_TIME_SKEW;
                case NTStatus.STATUS_PKINIT_FAILURE: return Win32ErrorCode.ERROR_PKINIT_FAILURE;
                ////case NTStatus.STATUS_SMARTCARD_SUBSYSTEM_FAILURE: return Win32ErrorCode.ERROR_SMARTCARD_SUBSYSTEM_FAILURE;
                case NTStatus.STATUS_DOWNGRADE_DETECTED: return Win32ErrorCode.ERROR_DOWNGRADE_DETECTED;
                ////case NTStatus.STATUS_SMARTCARD_CERT_REVOKED: return Win32ErrorCode.SEC_E_SMARTCARD_CERT_REVOKED;
                ////case NTStatus.STATUS_ISSUING_CA_UNTRUSTED: return Win32ErrorCode.SEC_E_ISSUING_CA_UNTRUSTED;
                ////case NTStatus.STATUS_REVOCATION_OFFLINE_C: return Win32ErrorCode.SEC_E_REVOCATION_OFFLINE_C;
                ////case NTStatus.STATUS_PKINIT_CLIENT_FAILURE: return Win32ErrorCode.SEC_E_PKINIT_CLIENT_FAILURE;
                ////case NTStatus.STATUS_SMARTCARD_CERT_EXPIRED: return Win32ErrorCode.SEC_E_SMARTCARD_CERT_EXPIRED;
                ////case NTStatus.STATUS_NO_KERB_KEY: return Win32ErrorCode.SEC_E_NO_KERB_KEY;
                ////case NTStatus.STATUS_CURRENT_DOMAIN_NOT_ALLOWED: return Win32ErrorCode.ERROR_CURRENT_DOMAIN_NOT_ALLOWED;
                ////case NTStatus.STATUS_SMARTCARD_WRONG_PIN: return Win32ErrorCode.SCARD_W_WRONG_CHV;
                ////case NTStatus.STATUS_SMARTCARD_CARD_BLOCKED: return Win32ErrorCode.SCARD_W_CHV_BLOCKED;
                ////case NTStatus.STATUS_SMARTCARD_CARD_NOT_AUTHENTICATED: return Win32ErrorCode.SCARD_W_CARD_NOT_AUTHENTICATED;
                ////case NTStatus.STATUS_SMARTCARD_NO_CARD: return Win32ErrorCode.SCARD_E_NO_SMARTCARD;
                ////case NTStatus.STATUS_SMARTCARD_NO_KEY_CONTAINER: return Win32ErrorCode.NTE_NO_KEY;
                ////case NTStatus.STATUS_SMARTCARD_NO_CERTIFICATE: return Win32ErrorCode.SCARD_E_NO_SUCH_CERTIFICATE;
                ////case NTStatus.STATUS_SMARTCARD_NO_KEYSET: return Win32ErrorCode.NTE_BAD_KEYSET;
                ////case NTStatus.STATUS_SMARTCARD_IO_ERROR: return Win32ErrorCode.SCARD_E_COMM_DATA_LOST;
                case NTStatus.STATUS_ACCOUNT_RESTRICTION: return Win32ErrorCode.ERROR_ACCOUNT_RESTRICTION;
                case NTStatus.STATUS_INVALID_LOGON_HOURS: return Win32ErrorCode.ERROR_INVALID_LOGON_HOURS;
                case NTStatus.STATUS_INVALID_WORKSTATION: return Win32ErrorCode.ERROR_INVALID_WORKSTATION;
                case NTStatus.STATUS_BUFFER_TOO_SMALL: return Win32ErrorCode.ERROR_INSUFFICIENT_BUFFER;
                case NTStatus.STATUS_UNABLE_TO_DECOMMIT_VM: return Win32ErrorCode.ERROR_INVALID_ADDRESS;
                case NTStatus.STATUS_DISK_CORRUPT_ERROR: return Win32ErrorCode.ERROR_DISK_CORRUPT;
                case NTStatus.STATUS_FT_MISSING_MEMBER: return Win32ErrorCode.ERROR_IO_DEVICE;
                case NTStatus.STATUS_FT_ORPHANING: return Win32ErrorCode.ERROR_IO_DEVICE;
                case NTStatus.STATUS_VARIABLE_NOT_FOUND: return Win32ErrorCode.ERROR_ENVVAR_NOT_FOUND;
                case NTStatus.STATUS_OBJECT_NAME_INVALID: return Win32ErrorCode.ERROR_INVALID_NAME;
                case NTStatus.STATUS_OBJECT_NAME_NOT_FOUND: return Win32ErrorCode.ERROR_FILE_NOT_FOUND;
                case NTStatus.STATUS_OBJECT_NAME_COLLISION: return Win32ErrorCode.ERROR_ALREADY_EXISTS;
                case NTStatus.STATUS_OBJECT_PATH_INVALID: return Win32ErrorCode.ERROR_BAD_PATHNAME;
                case NTStatus.STATUS_OBJECT_PATH_NOT_FOUND: return Win32ErrorCode.ERROR_PATH_NOT_FOUND;
                case NTStatus.STATUS_DFS_EXIT_PATH_FOUND: return Win32ErrorCode.ERROR_PATH_NOT_FOUND;
                case NTStatus.STATUS_DFS_UNAVAILABLE: return Win32ErrorCode.ERROR_CONNECTION_UNAVAIL;
                case NTStatus.STATUS_OBJECT_PATH_SYNTAX_BAD: return Win32ErrorCode.ERROR_BAD_PATHNAME;
                case NTStatus.STATUS_NAME_TOO_LONG: return Win32ErrorCode.ERROR_FILENAME_EXCED_RANGE;
                case NTStatus.STATUS_DATA_OVERRUN: return Win32ErrorCode.ERROR_IO_DEVICE;
                case NTStatus.STATUS_DATA_LATE_ERROR: return Win32ErrorCode.ERROR_IO_DEVICE;
                case NTStatus.STATUS_DATA_ERROR: return Win32ErrorCode.ERROR_CRC;
                case NTStatus.STATUS_CRC_ERROR: return Win32ErrorCode.ERROR_CRC;
                case NTStatus.STATUS_SHARING_VIOLATION: return Win32ErrorCode.ERROR_SHARING_VIOLATION;
                case NTStatus.STATUS_QUOTA_EXCEEDED: return Win32ErrorCode.ERROR_NOT_ENOUGH_QUOTA;
                case NTStatus.STATUS_MUTANT_NOT_OWNED: return Win32ErrorCode.ERROR_NOT_OWNER;
                case NTStatus.STATUS_SEMAPHORE_LIMIT_EXCEEDED: return Win32ErrorCode.ERROR_TOO_MANY_POSTS;
                case NTStatus.STATUS_DISK_FULL: return Win32ErrorCode.ERROR_DISK_FULL;
                case NTStatus.STATUS_LOCK_NOT_GRANTED: return Win32ErrorCode.ERROR_LOCK_VIOLATION;
                case NTStatus.STATUS_FILE_LOCK_CONFLICT: return Win32ErrorCode.ERROR_LOCK_VIOLATION;
                case NTStatus.STATUS_NOT_A_DIRECTORY: return Win32ErrorCode.ERROR_DIRECTORY;
                case NTStatus.STATUS_CANNOT_MAKE: return Win32ErrorCode.ERROR_CANNOT_MAKE;
                case NTStatus.STATUS_UNKNOWN_REVISION: return Win32ErrorCode.ERROR_UNKNOWN_REVISION;
                case NTStatus.STATUS_REVISION_MISMATCH: return Win32ErrorCode.ERROR_REVISION_MISMATCH;
                case NTStatus.STATUS_INVALID_OWNER: return Win32ErrorCode.ERROR_INVALID_OWNER;
                case NTStatus.STATUS_INVALID_PRIMARY_GROUP: return Win32ErrorCode.ERROR_INVALID_PRIMARY_GROUP;
                case NTStatus.STATUS_NO_IMPERSONATION_TOKEN: return Win32ErrorCode.ERROR_NO_IMPERSONATION_TOKEN;
                case NTStatus.STATUS_CANT_DISABLE_MANDATORY: return Win32ErrorCode.ERROR_CANT_DISABLE_MANDATORY;
                case NTStatus.STATUS_NO_LOGON_SERVERS: return Win32ErrorCode.ERROR_NO_LOGON_SERVERS;
                ////case NTStatus.STATUS_DOMAIN_CONTROLLER_NOT_FOUND: return Win32ErrorCode.ERROR_DOMAIN_CONTROLLER_NOT_FOUND;
                case NTStatus.STATUS_NO_SUCH_LOGON_SESSION: return Win32ErrorCode.ERROR_NO_SUCH_LOGON_SESSION;
                case NTStatus.STATUS_INVALID_ACCOUNT_NAME: return Win32ErrorCode.ERROR_INVALID_ACCOUNT_NAME;
                case NTStatus.STATUS_USER_EXISTS: return Win32ErrorCode.ERROR_USER_EXISTS;
                case NTStatus.STATUS_NO_SUCH_USER: return Win32ErrorCode.ERROR_NO_SUCH_USER;
                case NTStatus.STATUS_GROUP_EXISTS: return Win32ErrorCode.ERROR_GROUP_EXISTS;
                case NTStatus.STATUS_NO_SUCH_GROUP: return Win32ErrorCode.ERROR_NO_SUCH_GROUP;
                case NTStatus.STATUS_SPECIAL_GROUP: return Win32ErrorCode.ERROR_SPECIAL_GROUP;
                case NTStatus.STATUS_MEMBER_IN_GROUP: return Win32ErrorCode.ERROR_MEMBER_IN_GROUP;
                case NTStatus.STATUS_MEMBER_NOT_IN_GROUP: return Win32ErrorCode.ERROR_MEMBER_NOT_IN_GROUP;
                case NTStatus.STATUS_LAST_ADMIN: return Win32ErrorCode.ERROR_LAST_ADMIN;
                case NTStatus.STATUS_WRONG_PASSWORD: return Win32ErrorCode.ERROR_INVALID_PASSWORD;
                case NTStatus.STATUS_WRONG_PASSWORD_CORE: return Win32ErrorCode.ERROR_INVALID_PASSWORD;
                case NTStatus.STATUS_ILL_FORMED_PASSWORD: return Win32ErrorCode.ERROR_ILL_FORMED_PASSWORD;
                case NTStatus.STATUS_PASSWORD_RESTRICTION: return Win32ErrorCode.ERROR_PASSWORD_RESTRICTION;
                case NTStatus.STATUS_PASSWORD_EXPIRED: return Win32ErrorCode.ERROR_PASSWORD_EXPIRED;
                case NTStatus.STATUS_PASSWORD_MUST_CHANGE: return Win32ErrorCode.ERROR_PASSWORD_MUST_CHANGE;
                case NTStatus.STATUS_ACCOUNT_DISABLED: return Win32ErrorCode.ERROR_ACCOUNT_DISABLED;
                case NTStatus.STATUS_ACCOUNT_LOCKED_OUT: return Win32ErrorCode.ERROR_ACCOUNT_LOCKED_OUT;
                case NTStatus.STATUS_NONE_MAPPED: return Win32ErrorCode.ERROR_NONE_MAPPED;
                case NTStatus.STATUS_TOO_MANY_LUIDS_REQUESTED: return Win32ErrorCode.ERROR_TOO_MANY_LUIDS_REQUESTED;
                case NTStatus.STATUS_LUIDS_EXHAUSTED: return Win32ErrorCode.ERROR_LUIDS_EXHAUSTED;
                case NTStatus.STATUS_INVALID_SUB_AUTHORITY: return Win32ErrorCode.ERROR_INVALID_SUB_AUTHORITY;
                case NTStatus.STATUS_INVALID_ACL: return Win32ErrorCode.ERROR_INVALID_ACL;
                case NTStatus.STATUS_INVALID_SID: return Win32ErrorCode.ERROR_INVALID_SID;
                case NTStatus.STATUS_INVALID_SECURITY_DESCR: return Win32ErrorCode.ERROR_INVALID_SECURITY_DESCR;
                case NTStatus.STATUS_PROCEDURE_NOT_FOUND: return Win32ErrorCode.ERROR_PROC_NOT_FOUND;
                case NTStatus.STATUS_BAD_INITIAL_PC: return Win32ErrorCode.ERROR_BAD_EXE_FORMAT;
                case NTStatus.STATUS_INVALID_FILE_FOR_SECTION: return Win32ErrorCode.ERROR_BAD_EXE_FORMAT;
                case NTStatus.STATUS_INVALID_IMAGE_FORMAT: return Win32ErrorCode.ERROR_BAD_EXE_FORMAT;
                case NTStatus.STATUS_IMAGE_MP_UP_MISMATCH: return Win32ErrorCode.ERROR_BAD_EXE_FORMAT;
                case NTStatus.STATUS_INVALID_IMAGE_NOT_MZ: return Win32ErrorCode.ERROR_BAD_EXE_FORMAT;
                case NTStatus.STATUS_IMAGE_CHECKSUM_MISMATCH: return Win32ErrorCode.ERROR_BAD_EXE_FORMAT;
                case NTStatus.STATUS_INVALID_IMAGE_PROTECT: return Win32ErrorCode.ERROR_BAD_EXE_FORMAT;
                case NTStatus.STATUS_INVALID_IMAGE_LE_FORMAT: return Win32ErrorCode.ERROR_BAD_EXE_FORMAT;
                case NTStatus.STATUS_INVALID_IMAGE_NE_FORMAT: return Win32ErrorCode.ERROR_BAD_EXE_FORMAT;
                case NTStatus.STATUS_INVALID_IMAGE_WIN_16: return Win32ErrorCode.ERROR_BAD_EXE_FORMAT;
                case NTStatus.STATUS_INVALID_IMAGE_WIN_32: return Win32ErrorCode.ERROR_BAD_EXE_FORMAT;
                case NTStatus.STATUS_INVALID_IMAGE_WIN_64: return Win32ErrorCode.ERROR_BAD_EXE_FORMAT;
                case NTStatus.STATUS_NO_TOKEN: return Win32ErrorCode.ERROR_NO_TOKEN;
                case NTStatus.STATUS_RANGE_NOT_LOCKED: return Win32ErrorCode.ERROR_NOT_LOCKED;
                case NTStatus.STATUS_SERVER_DISABLED: return Win32ErrorCode.ERROR_SERVER_DISABLED;
                case NTStatus.STATUS_SERVER_NOT_DISABLED: return Win32ErrorCode.ERROR_SERVER_NOT_DISABLED;
                case NTStatus.STATUS_INVALID_ID_AUTHORITY: return Win32ErrorCode.ERROR_INVALID_ID_AUTHORITY;
                case NTStatus.STATUS_ALLOTTED_SPACE_EXCEEDED: return Win32ErrorCode.ERROR_ALLOTTED_SPACE_EXCEEDED;
                case NTStatus.STATUS_TOO_MANY_PAGING_FILES: return Win32ErrorCode.ERROR_NOT_ENOUGH_MEMORY;
                case NTStatus.STATUS_INSUFFICIENT_RESOURCES: return Win32ErrorCode.ERROR_NO_SYSTEM_RESOURCES;
                case NTStatus.STATUS_INSUFF_SERVER_RESOURCES: return Win32ErrorCode.ERROR_NOT_ENOUGH_SERVER_MEMORY;
                case NTStatus.STATUS_FILE_INVALID: return Win32ErrorCode.ERROR_FILE_INVALID;
                case NTStatus.STATUS_MAPPED_FILE_SIZE_ZERO: return Win32ErrorCode.ERROR_FILE_INVALID;
                case NTStatus.STATUS_DEVICE_PAPER_EMPTY: return Win32ErrorCode.ERROR_OUT_OF_PAPER;
                case NTStatus.STATUS_DEVICE_POWERED_OFF: return Win32ErrorCode.ERROR_NOT_READY;
                case NTStatus.STATUS_DEVICE_OFF_LINE: return Win32ErrorCode.ERROR_NOT_READY;
                case NTStatus.STATUS_DEVICE_DATA_ERROR: return Win32ErrorCode.ERROR_CRC;
                case NTStatus.STATUS_DEVICE_NOT_READY: return Win32ErrorCode.ERROR_NOT_READY;
                case NTStatus.STATUS_DEVICE_NOT_CONNECTED: return Win32ErrorCode.ERROR_DEVICE_NOT_CONNECTED;
                case NTStatus.STATUS_DEVICE_POWER_FAILURE: return Win32ErrorCode.ERROR_NOT_READY;
                case NTStatus.STATUS_NOT_FOUND: return Win32ErrorCode.ERROR_NOT_FOUND;
                case NTStatus.STATUS_NO_MATCH: return Win32ErrorCode.ERROR_NO_MATCH;
                case NTStatus.STATUS_PROPSET_NOT_FOUND: return Win32ErrorCode.ERROR_SET_NOT_FOUND;
                case NTStatus.STATUS_DEVICE_BUSY: return Win32ErrorCode.ERROR_BUSY;
                case NTStatus.STATUS_FREE_VM_NOT_AT_BASE: return Win32ErrorCode.ERROR_INVALID_ADDRESS;
                case NTStatus.STATUS_MEMORY_NOT_ALLOCATED: return Win32ErrorCode.ERROR_INVALID_ADDRESS;
                case NTStatus.STATUS_NOT_SAME_DEVICE: return Win32ErrorCode.ERROR_NOT_SAME_DEVICE;
                case NTStatus.STATUS_NOT_SUPPORTED: return Win32ErrorCode.ERROR_NOT_SUPPORTED;
                case NTStatus.STATUS_REMOTE_NOT_LISTENING: return Win32ErrorCode.ERROR_REM_NOT_LIST;
                case NTStatus.STATUS_DUPLICATE_NAME: return Win32ErrorCode.ERROR_DUP_NAME;
                case NTStatus.STATUS_BAD_NETWORK_PATH: return Win32ErrorCode.ERROR_BAD_NETPATH;
                case NTStatus.STATUS_NETWORK_BUSY: return Win32ErrorCode.ERROR_NETWORK_BUSY;
                case NTStatus.STATUS_ONLY_IF_CONNECTED: return Win32ErrorCode.ERROR_ONLY_IF_CONNECTED;
                case NTStatus.STATUS_DEVICE_DOES_NOT_EXIST: return Win32ErrorCode.ERROR_DEV_NOT_EXIST;
                case NTStatus.STATUS_TOO_MANY_COMMANDS: return Win32ErrorCode.ERROR_TOO_MANY_CMDS;
                case NTStatus.STATUS_ADAPTER_HARDWARE_ERROR: return Win32ErrorCode.ERROR_ADAP_HDW_ERR;
                case NTStatus.STATUS_REDIRECTOR_NOT_STARTED: return Win32ErrorCode.ERROR_PATH_NOT_FOUND;
                case NTStatus.STATUS_INVALID_EA_NAME: return Win32ErrorCode.ERROR_INVALID_EA_NAME;
                case NTStatus.STATUS_EA_LIST_INCONSISTENT: return Win32ErrorCode.ERROR_EA_LIST_INCONSISTENT;
                case NTStatus.STATUS_EA_TOO_LARGE: return Win32ErrorCode.ERROR_EA_LIST_INCONSISTENT;
                case NTStatus.STATUS_INVALID_EA_FLAG: return Win32ErrorCode.ERROR_EA_LIST_INCONSISTENT;
                case NTStatus.STATUS_EAS_NOT_SUPPORTED: return Win32ErrorCode.ERROR_EAS_NOT_SUPPORTED;
                case NTStatus.STATUS_FILE_CORRUPT_ERROR: return Win32ErrorCode.ERROR_FILE_CORRUPT;
                case NTStatus.STATUS_EA_CORRUPT_ERROR: return Win32ErrorCode.ERROR_FILE_CORRUPT;
                case NTStatus.STATUS_NONEXISTENT_EA_ENTRY: return Win32ErrorCode.ERROR_FILE_CORRUPT;
                case NTStatus.STATUS_NO_EAS_ON_FILE: return Win32ErrorCode.ERROR_FILE_CORRUPT;
                case NTStatus.STATUS_NOT_A_REPARSE_POINT: return Win32ErrorCode.ERROR_NOT_A_REPARSE_POINT;
                case NTStatus.STATUS_IO_REPARSE_TAG_INVALID: return Win32ErrorCode.ERROR_REPARSE_TAG_INVALID;
                case NTStatus.STATUS_IO_REPARSE_TAG_MISMATCH: return Win32ErrorCode.ERROR_REPARSE_TAG_MISMATCH;
                case NTStatus.STATUS_IO_REPARSE_TAG_NOT_HANDLED: return Win32ErrorCode.ERROR_CANT_ACCESS_FILE;
                case NTStatus.STATUS_REPARSE_POINT_NOT_RESOLVED: return Win32ErrorCode.ERROR_CANT_RESOLVE_FILENAME;
                case NTStatus.STATUS_DIRECTORY_IS_A_REPARSE_POINT: return Win32ErrorCode.ERROR_BAD_PATHNAME;
                ////case NTStatus.STATUS_REPARSE_ATTRIBUTE_CONFLICT: return Win32ErrorCode.ERROR_REPARSE_ATTRIBUTE_CONFLICT;
                case NTStatus.STATUS_IO_REPARSE_DATA_INVALID: return Win32ErrorCode.ERROR_INVALID_REPARSE_DATA;
                case NTStatus.STATUS_FILE_IS_OFFLINE: return Win32ErrorCode.ERROR_FILE_OFFLINE;
                case NTStatus.STATUS_REMOTE_STORAGE_NOT_ACTIVE: return Win32ErrorCode.ERROR_REMOTE_STORAGE_NOT_ACTIVE;
                ////case NTStatus.STATUS_REMOTE_STORAGE_MEDIA_ERROR: return Win32ErrorCode.ERROR_REMOTE_STORAGE_MEDIA_ERROR;
                case NTStatus.STATUS_NO_TRACKING_SERVICE: return Win32ErrorCode.ERROR_NO_TRACKING_SERVICE;
                ////case NTStatus.STATUS_JOURNAL_DELETE_IN_PROGRESS: return Win32ErrorCode.ERROR_JOURNAL_DELETE_IN_PROGRESS;
                case NTStatus.STATUS_JOURNAL_NOT_ACTIVE: return Win32ErrorCode.ERROR_JOURNAL_NOT_ACTIVE;
                case NTStatus.STATUS_JOURNAL_ENTRY_DELETED: return Win32ErrorCode.ERROR_JOURNAL_ENTRY_DELETED;
                case NTStatus.STATUS_INVALID_NETWORK_RESPONSE: return Win32ErrorCode.ERROR_BAD_NET_RESP;
                case NTStatus.STATUS_USER_SESSION_DELETED: return Win32ErrorCode.ERROR_UNEXP_NET_ERR;
                case NTStatus.STATUS_UNEXPECTED_NETWORK_ERROR: return Win32ErrorCode.ERROR_UNEXP_NET_ERR;
                ////case NTStatus.STATUS_USER_SESSION_DELETED: return Win32ErrorCode.ERROR_UNEXP_NET_ERR;
                case NTStatus.STATUS_BAD_REMOTE_ADAPTER: return Win32ErrorCode.ERROR_BAD_REM_ADAP;
                case NTStatus.STATUS_PRINT_QUEUE_FULL: return Win32ErrorCode.ERROR_PRINTQ_FULL;
                case NTStatus.STATUS_NO_SPOOL_SPACE: return Win32ErrorCode.ERROR_NO_SPOOL_SPACE;
                case NTStatus.STATUS_PRINT_CANCELLED: return Win32ErrorCode.ERROR_PRINT_CANCELLED;
                case NTStatus.STATUS_NETWORK_NAME_DELETED: return Win32ErrorCode.ERROR_NETNAME_DELETED;
                case NTStatus.STATUS_NETWORK_ACCESS_DENIED: return Win32ErrorCode.ERROR_NETWORK_ACCESS_DENIED;
                case NTStatus.STATUS_BAD_DEVICE_TYPE: return Win32ErrorCode.ERROR_BAD_DEV_TYPE;
                case NTStatus.STATUS_BAD_NETWORK_NAME: return Win32ErrorCode.ERROR_BAD_NET_NAME;
                case NTStatus.STATUS_TOO_MANY_NAMES: return Win32ErrorCode.ERROR_TOO_MANY_NAMES;
                case NTStatus.STATUS_TOO_MANY_GUIDS_REQUESTED: return Win32ErrorCode.ERROR_TOO_MANY_NAMES;
                case NTStatus.STATUS_TOO_MANY_ADDRESSES: return Win32ErrorCode.ERROR_TOO_MANY_NAMES;
                case NTStatus.STATUS_TOO_MANY_NODES: return Win32ErrorCode.ERROR_TOO_MANY_NAMES;
                case NTStatus.STATUS_TOO_MANY_SESSIONS: return Win32ErrorCode.ERROR_TOO_MANY_SESS;
                case NTStatus.STATUS_SHARING_PAUSED: return Win32ErrorCode.ERROR_SHARING_PAUSED;
                case NTStatus.STATUS_REQUEST_NOT_ACCEPTED: return Win32ErrorCode.ERROR_REQ_NOT_ACCEP;
                case NTStatus.STATUS_REDIRECTOR_PAUSED: return Win32ErrorCode.ERROR_REDIR_PAUSED;
                case NTStatus.STATUS_NET_WRITE_FAULT: return Win32ErrorCode.ERROR_NET_WRITE_FAULT;
                case NTStatus.STATUS_VIRTUAL_CIRCUIT_CLOSED: return Win32ErrorCode.ERROR_VC_DISCONNECTED;
                case NTStatus.STATUS_INVALID_PIPE_STATE: return Win32ErrorCode.ERROR_BAD_PIPE;
                case NTStatus.STATUS_INVALID_READ_MODE: return Win32ErrorCode.ERROR_BAD_PIPE;
                case NTStatus.STATUS_PIPE_CLOSING: return Win32ErrorCode.ERROR_NO_DATA;
                case NTStatus.STATUS_PIPE_EMPTY: return Win32ErrorCode.ERROR_NO_DATA;
                case NTStatus.STATUS_PIPE_CONNECTED: return Win32ErrorCode.ERROR_PIPE_CONNECTED;
                case NTStatus.STATUS_PIPE_DISCONNECTED: return Win32ErrorCode.ERROR_PIPE_NOT_CONNECTED;
                case NTStatus.STATUS_PIPE_LISTENING: return Win32ErrorCode.ERROR_PIPE_LISTENING;
                case NTStatus.STATUS_PIPE_NOT_AVAILABLE: return Win32ErrorCode.ERROR_PIPE_BUSY;
                case NTStatus.STATUS_INSTANCE_NOT_AVAILABLE: return Win32ErrorCode.ERROR_PIPE_BUSY;
                case NTStatus.STATUS_PIPE_BUSY: return Win32ErrorCode.ERROR_PIPE_BUSY;
                case NTStatus.STATUS_PIPE_BROKEN: return Win32ErrorCode.ERROR_BROKEN_PIPE;
                case NTStatus.STATUS_DIRECTORY_NOT_EMPTY: return Win32ErrorCode.ERROR_DIR_NOT_EMPTY;
                case NTStatus.STATUS_TOO_MANY_OPENED_FILES: return Win32ErrorCode.ERROR_TOO_MANY_OPEN_FILES;
                case NTStatus.STATUS_IO_TIMEOUT: return Win32ErrorCode.ERROR_SEM_TIMEOUT;
                case NTStatus.STATUS_CANCELLED: return Win32ErrorCode.ERROR_OPERATION_ABORTED;
                case NTStatus.STATUS_UNRECOGNIZED_MEDIA: return Win32ErrorCode.ERROR_UNRECOGNIZED_MEDIA;
                case NTStatus.STATUS_INVALID_LEVEL: return Win32ErrorCode.ERROR_INVALID_LEVEL;
                case NTStatus.STATUS_UNRECOGNIZED_VOLUME: return Win32ErrorCode.ERROR_UNRECOGNIZED_VOLUME;
                case NTStatus.STATUS_MEDIA_WRITE_PROTECTED: return Win32ErrorCode.ERROR_WRITE_PROTECT;
                case NTStatus.STATUS_TOO_LATE: return Win32ErrorCode.ERROR_WRITE_PROTECT;
                case NTStatus.STATUS_SUCCESS: return Win32ErrorCode.ERROR_SUCCESS;
                case NTStatus.STATUS_FULLSCREEN_MODE: return Win32ErrorCode.ERROR_FULLSCREEN_MODE;
                case NTStatus.STATUS_END_OF_MEDIA: return Win32ErrorCode.ERROR_END_OF_MEDIA;
                case NTStatus.STATUS_EOM_OVERFLOW: return Win32ErrorCode.ERROR_EOM_OVERFLOW;
                case NTStatus.STATUS_BEGINNING_OF_MEDIA: return Win32ErrorCode.ERROR_BEGINNING_OF_MEDIA;
                case NTStatus.STATUS_MEDIA_CHANGED: return Win32ErrorCode.ERROR_MEDIA_CHANGED;
                case NTStatus.STATUS_BUS_RESET: return Win32ErrorCode.ERROR_BUS_RESET;
                case NTStatus.STATUS_FILEMARK_DETECTED: return Win32ErrorCode.ERROR_FILEMARK_DETECTED;
                case NTStatus.STATUS_SETMARK_DETECTED: return Win32ErrorCode.ERROR_SETMARK_DETECTED;
                case NTStatus.STATUS_NO_DATA_DETECTED: return Win32ErrorCode.ERROR_NO_DATA_DETECTED;
                case NTStatus.STATUS_PARTITION_FAILURE: return Win32ErrorCode.ERROR_PARTITION_FAILURE;
                case NTStatus.STATUS_INVALID_BLOCK_LENGTH: return Win32ErrorCode.ERROR_INVALID_BLOCK_LENGTH;
                case NTStatus.STATUS_DEVICE_NOT_PARTITIONED: return Win32ErrorCode.ERROR_DEVICE_NOT_PARTITIONED;
                case NTStatus.STATUS_UNABLE_TO_LOCK_MEDIA: return Win32ErrorCode.ERROR_UNABLE_TO_LOCK_MEDIA;
                case NTStatus.STATUS_UNABLE_TO_UNLOAD_MEDIA: return Win32ErrorCode.ERROR_UNABLE_TO_UNLOAD_MEDIA;
                case NTStatus.STATUS_UNMAPPABLE_CHARACTER: return Win32ErrorCode.ERROR_NO_UNICODE_TRANSLATION;
                case NTStatus.STATUS_NOT_ALL_ASSIGNED: return Win32ErrorCode.ERROR_NOT_ALL_ASSIGNED;
                case NTStatus.STATUS_SOME_NOT_MAPPED: return Win32ErrorCode.ERROR_SOME_NOT_MAPPED;
                case NTStatus.STATUS_NO_QUOTAS_FOR_ACCOUNT: return Win32ErrorCode.ERROR_NO_QUOTAS_FOR_ACCOUNT;
                case NTStatus.STATUS_LOCAL_USER_SESSION_KEY: return Win32ErrorCode.ERROR_LOCAL_USER_SESSION_KEY;
                case NTStatus.STATUS_NULL_LM_PASSWORD: return Win32ErrorCode.ERROR_NULL_LM_PASSWORD;
                case NTStatus.STATUS_BAD_INHERITANCE_ACL: return Win32ErrorCode.ERROR_BAD_INHERITANCE_ACL;
                case NTStatus.STATUS_INVALID_GROUP_ATTRIBUTES: return Win32ErrorCode.ERROR_INVALID_GROUP_ATTRIBUTES;
                case NTStatus.STATUS_BAD_IMPERSONATION_LEVEL: return Win32ErrorCode.ERROR_BAD_IMPERSONATION_LEVEL;
                case NTStatus.STATUS_CANT_OPEN_ANONYMOUS: return Win32ErrorCode.ERROR_CANT_OPEN_ANONYMOUS;
                case NTStatus.STATUS_BAD_VALIDATION_CLASS: return Win32ErrorCode.ERROR_BAD_VALIDATION_CLASS;
                case NTStatus.STATUS_BAD_TOKEN_TYPE: return Win32ErrorCode.ERROR_BAD_TOKEN_TYPE;
                case NTStatus.STATUS_BAD_MASTER_BOOT_RECORD: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_NO_SECURITY_ON_OBJECT: return Win32ErrorCode.ERROR_NO_SECURITY_ON_OBJECT;
                case NTStatus.STATUS_CANT_ACCESS_DOMAIN_INFO: return Win32ErrorCode.ERROR_CANT_ACCESS_DOMAIN_INFO;
                case NTStatus.STATUS_INVALID_SERVER_STATE: return Win32ErrorCode.ERROR_INVALID_SERVER_STATE;
                case NTStatus.STATUS_INVALID_DOMAIN_STATE: return Win32ErrorCode.ERROR_INVALID_DOMAIN_STATE;
                case NTStatus.STATUS_INVALID_DOMAIN_ROLE: return Win32ErrorCode.ERROR_INVALID_DOMAIN_ROLE;
                case NTStatus.STATUS_NO_SUCH_DOMAIN: return Win32ErrorCode.ERROR_NO_SUCH_DOMAIN;
                case NTStatus.STATUS_DOMAIN_EXISTS: return Win32ErrorCode.ERROR_DOMAIN_EXISTS;
                case NTStatus.STATUS_DOMAIN_LIMIT_EXCEEDED: return Win32ErrorCode.ERROR_DOMAIN_LIMIT_EXCEEDED;
                case NTStatus.STATUS_OPLOCK_NOT_GRANTED: return Win32ErrorCode.ERROR_OPLOCK_NOT_GRANTED;
                case NTStatus.STATUS_INVALID_OPLOCK_PROTOCOL: return Win32ErrorCode.ERROR_INVALID_OPLOCK_PROTOCOL;
                case NTStatus.STATUS_INTERNAL_DB_CORRUPTION: return Win32ErrorCode.ERROR_INTERNAL_DB_CORRUPTION;
                case NTStatus.STATUS_INTERNAL_ERROR: return Win32ErrorCode.ERROR_INTERNAL_ERROR;
                case NTStatus.STATUS_GENERIC_NOT_MAPPED: return Win32ErrorCode.ERROR_GENERIC_NOT_MAPPED;
                case NTStatus.STATUS_BAD_DESCRIPTOR_FORMAT: return Win32ErrorCode.ERROR_BAD_DESCRIPTOR_FORMAT;
                case NTStatus.STATUS_NOT_LOGON_PROCESS: return Win32ErrorCode.ERROR_NOT_LOGON_PROCESS;
                case NTStatus.STATUS_LOGON_SESSION_EXISTS: return Win32ErrorCode.ERROR_LOGON_SESSION_EXISTS;
                case NTStatus.STATUS_NO_SUCH_PACKAGE: return Win32ErrorCode.ERROR_NO_SUCH_PACKAGE;
                case NTStatus.STATUS_BAD_LOGON_SESSION_STATE: return Win32ErrorCode.ERROR_BAD_LOGON_SESSION_STATE;
                case NTStatus.STATUS_LOGON_SESSION_COLLISION: return Win32ErrorCode.ERROR_LOGON_SESSION_COLLISION;
                case NTStatus.STATUS_INVALID_LOGON_TYPE: return Win32ErrorCode.ERROR_INVALID_LOGON_TYPE;
                case NTStatus.STATUS_RXACT_INVALID_STATE: return Win32ErrorCode.ERROR_RXACT_INVALID_STATE;
                case NTStatus.STATUS_RXACT_COMMIT_FAILURE: return Win32ErrorCode.ERROR_RXACT_COMMIT_FAILURE;
                case NTStatus.STATUS_SPECIAL_ACCOUNT: return Win32ErrorCode.ERROR_SPECIAL_ACCOUNT;
                case NTStatus.STATUS_SPECIAL_USER: return Win32ErrorCode.ERROR_SPECIAL_USER;
                case NTStatus.STATUS_MEMBERS_PRIMARY_GROUP: return Win32ErrorCode.ERROR_MEMBERS_PRIMARY_GROUP;
                case NTStatus.STATUS_TOKEN_ALREADY_IN_USE: return Win32ErrorCode.ERROR_TOKEN_ALREADY_IN_USE;
                case NTStatus.STATUS_NO_SUCH_ALIAS: return Win32ErrorCode.ERROR_NO_SUCH_ALIAS;
                case NTStatus.STATUS_MEMBER_NOT_IN_ALIAS: return Win32ErrorCode.ERROR_MEMBER_NOT_IN_ALIAS;
                case NTStatus.STATUS_MEMBER_IN_ALIAS: return Win32ErrorCode.ERROR_MEMBER_IN_ALIAS;
                case NTStatus.STATUS_ALIAS_EXISTS: return Win32ErrorCode.ERROR_ALIAS_EXISTS;
                case NTStatus.STATUS_LOGON_NOT_GRANTED: return Win32ErrorCode.ERROR_LOGON_NOT_GRANTED;
                case NTStatus.STATUS_TOO_MANY_SECRETS: return Win32ErrorCode.ERROR_TOO_MANY_SECRETS;
                case NTStatus.STATUS_SECRET_TOO_LONG: return Win32ErrorCode.ERROR_SECRET_TOO_LONG;
                case NTStatus.STATUS_INTERNAL_DB_ERROR: return Win32ErrorCode.ERROR_INTERNAL_DB_ERROR;
                case NTStatus.STATUS_TOO_MANY_CONTEXT_IDS: return Win32ErrorCode.ERROR_TOO_MANY_CONTEXT_IDS;
                case NTStatus.STATUS_LOGON_TYPE_NOT_GRANTED: return Win32ErrorCode.ERROR_LOGON_TYPE_NOT_GRANTED;
                ////case NTStatus.STATUS_NT_CROSS_ENCRYPTION_REQUIRED: return Win32ErrorCode.ERROR_NT_CROSS_ENCRYPTION_REQUIRED;
                case NTStatus.STATUS_NO_SUCH_MEMBER: return Win32ErrorCode.ERROR_NO_SUCH_MEMBER;
                case NTStatus.STATUS_INVALID_MEMBER: return Win32ErrorCode.ERROR_INVALID_MEMBER;
                case NTStatus.STATUS_TOO_MANY_SIDS: return Win32ErrorCode.ERROR_TOO_MANY_SIDS;
                ////case NTStatus.STATUS_LM_CROSS_ENCRYPTION_REQUIRED: return Win32ErrorCode.ERROR_LM_CROSS_ENCRYPTION_REQUIRED;
                case NTStatus.STATUS_MESSAGE_NOT_FOUND: return Win32ErrorCode.ERROR_MR_MID_NOT_FOUND;
                case NTStatus.STATUS_LOCAL_DISCONNECT: return Win32ErrorCode.ERROR_NETNAME_DELETED;
                case NTStatus.STATUS_REMOTE_DISCONNECT: return Win32ErrorCode.ERROR_NETNAME_DELETED;
                case NTStatus.STATUS_REMOTE_RESOURCES: return Win32ErrorCode.ERROR_REM_NOT_LIST;
                case NTStatus.STATUS_LINK_FAILED: return Win32ErrorCode.ERROR_UNEXP_NET_ERR;
                case NTStatus.STATUS_LINK_TIMEOUT: return Win32ErrorCode.ERROR_UNEXP_NET_ERR;
                case NTStatus.STATUS_INVALID_CONNECTION: return Win32ErrorCode.ERROR_UNEXP_NET_ERR;
                case NTStatus.STATUS_INVALID_ADDRESS: return Win32ErrorCode.ERROR_UNEXP_NET_ERR;
                case NTStatus.STATUS_IO_DEVICE_ERROR: return Win32ErrorCode.ERROR_IO_DEVICE;
                case NTStatus.STATUS_DEVICE_PROTOCOL_ERROR: return Win32ErrorCode.ERROR_IO_DEVICE;
                case NTStatus.STATUS_DRIVER_INTERNAL_ERROR: return Win32ErrorCode.ERROR_IO_DEVICE;
                case NTStatus.STATUS_INVALID_DEVICE_STATE: return Win32ErrorCode.ERROR_BAD_COMMAND;
                case NTStatus.STATUS_DEVICE_CONFIGURATION_ERROR: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_SOURCE_ELEMENT_EMPTY: return Win32ErrorCode.ERROR_SOURCE_ELEMENT_EMPTY;
                case NTStatus.STATUS_DESTINATION_ELEMENT_FULL: return Win32ErrorCode.ERROR_DESTINATION_ELEMENT_FULL;
                case NTStatus.STATUS_ILLEGAL_ELEMENT_ADDRESS: return Win32ErrorCode.ERROR_ILLEGAL_ELEMENT_ADDRESS;
                case NTStatus.STATUS_MAGAZINE_NOT_PRESENT: return Win32ErrorCode.ERROR_MAGAZINE_NOT_PRESENT;
                ////case NTStatus.STATUS_REINITIALIZATION_NEEDED: return Win32ErrorCode.ERROR_DEVICE_REINITIALIZATION_NEEDED;
                case NTStatus.STATUS_DEVICE_REQUIRES_CLEANING: return Win32ErrorCode.ERROR_DEVICE_REQUIRES_CLEANING;
                case NTStatus.STATUS_DEVICE_DOOR_OPEN: return Win32ErrorCode.ERROR_DEVICE_DOOR_OPEN;
                case NTStatus.STATUS_TRANSPORT_FULL: return Win32ErrorCode.ERROR_TRANSPORT_FULL;
                ////case NTStatus.STATUS_CLEANER_CARTRIDGE_INSTALLED: return Win32ErrorCode.ERROR_CLEANER_CARTRIDGE_INSTALLED;
                case NTStatus.STATUS_REG_NAT_CONSUMPTION: return Win32ErrorCode.ERROR_REG_NAT_CONSUMPTION;
                case NTStatus.STATUS_ENCRYPTION_FAILED: return Win32ErrorCode.ERROR_ACCESS_DENIED;
                case NTStatus.STATUS_DECRYPTION_FAILED: return Win32ErrorCode.ERROR_ACCESS_DENIED;
                case NTStatus.STATUS_NO_RECOVERY_POLICY: return Win32ErrorCode.ERROR_ACCESS_DENIED;
                case NTStatus.STATUS_NO_EFS: return Win32ErrorCode.ERROR_ACCESS_DENIED;
                case NTStatus.STATUS_WRONG_EFS: return Win32ErrorCode.ERROR_ACCESS_DENIED;
                case NTStatus.STATUS_NO_USER_KEYS: return Win32ErrorCode.ERROR_ACCESS_DENIED;
                case NTStatus.STATUS_FILE_NOT_ENCRYPTED: return Win32ErrorCode.ERROR_FILE_NOT_ENCRYPTED;
                case NTStatus.STATUS_NOT_EXPORT_FORMAT: return Win32ErrorCode.ERROR_NOT_EXPORT_FORMAT;
                case NTStatus.STATUS_FILE_ENCRYPTED: return Win32ErrorCode.ERROR_FILE_ENCRYPTED;
                case NTStatus.STATUS_EFS_ALG_BLOB_TOO_BIG: return Win32ErrorCode.ERROR_EFS_ALG_BLOB_TOO_BIG;
                case NTStatus.STATUS_INVALID_USER_BUFFER: return Win32ErrorCode.ERROR_INVALID_USER_BUFFER;
                case NTStatus.STATUS_SERIAL_NO_DEVICE_INITED: return Win32ErrorCode.ERROR_SERIAL_NO_DEVICE;
                case NTStatus.STATUS_SHARED_IRQ_BUSY: return Win32ErrorCode.ERROR_IRQ_BUSY;
                case NTStatus.STATUS_SERIAL_MORE_WRITES: return Win32ErrorCode.ERROR_MORE_WRITES;
                case NTStatus.STATUS_SERIAL_COUNTER_TIMEOUT: return Win32ErrorCode.ERROR_COUNTER_TIMEOUT;
                case NTStatus.STATUS_FLOPPY_ID_MARK_NOT_FOUND: return Win32ErrorCode.ERROR_FLOPPY_ID_MARK_NOT_FOUND;
                case NTStatus.STATUS_FLOPPY_WRONG_CYLINDER: return Win32ErrorCode.ERROR_FLOPPY_WRONG_CYLINDER;
                case NTStatus.STATUS_FLOPPY_UNKNOWN_ERROR: return Win32ErrorCode.ERROR_FLOPPY_UNKNOWN_ERROR;
                case NTStatus.STATUS_FLOPPY_BAD_REGISTERS: return Win32ErrorCode.ERROR_FLOPPY_BAD_REGISTERS;
                case NTStatus.STATUS_DISK_RECALIBRATE_FAILED: return Win32ErrorCode.ERROR_DISK_RECALIBRATE_FAILED;
                case NTStatus.STATUS_DISK_OPERATION_FAILED: return Win32ErrorCode.ERROR_DISK_OPERATION_FAILED;
                case NTStatus.STATUS_DISK_RESET_FAILED: return Win32ErrorCode.ERROR_DISK_RESET_FAILED;
                case NTStatus.STATUS_EVENTLOG_FILE_CORRUPT: return Win32ErrorCode.ERROR_EVENTLOG_FILE_CORRUPT;
                case NTStatus.STATUS_EVENTLOG_CANT_START: return Win32ErrorCode.ERROR_EVENTLOG_CANT_START;
                case NTStatus.STATUS_NETLOGON_NOT_STARTED: return Win32ErrorCode.ERROR_NETLOGON_NOT_STARTED;
                case NTStatus.STATUS_ACCOUNT_EXPIRED: return Win32ErrorCode.ERROR_ACCOUNT_EXPIRED;
                ////case NTStatus.STATUS_NETWORK_CREDENTIAL_CONFLICT: return Win32ErrorCode.ERROR_SESSION_CREDENTIAL_CONFLICT;
                ////case NTStatus.STATUS_REMOTE_SESSION_LIMIT: return Win32ErrorCode.ERROR_REMOTE_SESSION_LIMIT_EXCEEDED;
                case NTStatus.STATUS_INVALID_BUFFER_SIZE: return Win32ErrorCode.ERROR_INVALID_USER_BUFFER;
                case NTStatus.STATUS_INVALID_ADDRESS_COMPONENT: return Win32ErrorCode.ERROR_INVALID_NETNAME;
                case NTStatus.STATUS_INVALID_ADDRESS_WILDCARD: return Win32ErrorCode.ERROR_INVALID_NETNAME;
                case NTStatus.STATUS_ADDRESS_ALREADY_EXISTS: return Win32ErrorCode.ERROR_DUP_NAME;
                case NTStatus.STATUS_ADDRESS_CLOSED: return Win32ErrorCode.ERROR_NETNAME_DELETED;
                case NTStatus.STATUS_CONNECTION_DISCONNECTED: return Win32ErrorCode.ERROR_NETNAME_DELETED;
                case NTStatus.STATUS_CONNECTION_RESET: return Win32ErrorCode.ERROR_NETNAME_DELETED;
                case NTStatus.STATUS_TRANSACTION_ABORTED: return Win32ErrorCode.ERROR_UNEXP_NET_ERR;
                case NTStatus.STATUS_TRANSACTION_TIMED_OUT: return Win32ErrorCode.ERROR_UNEXP_NET_ERR;
                case NTStatus.STATUS_TRANSACTION_NO_RELEASE: return Win32ErrorCode.ERROR_UNEXP_NET_ERR;
                case NTStatus.STATUS_TRANSACTION_NO_MATCH: return Win32ErrorCode.ERROR_UNEXP_NET_ERR;
                case NTStatus.STATUS_TRANSACTION_RESPONDED: return Win32ErrorCode.ERROR_UNEXP_NET_ERR;
                case NTStatus.STATUS_TRANSACTION_INVALID_ID: return Win32ErrorCode.ERROR_UNEXP_NET_ERR;
                case NTStatus.STATUS_TRANSACTION_INVALID_TYPE: return Win32ErrorCode.ERROR_UNEXP_NET_ERR;
                case NTStatus.STATUS_NOT_SERVER_SESSION: return Win32ErrorCode.ERROR_NOT_SUPPORTED;
                case NTStatus.STATUS_NOT_CLIENT_SESSION: return Win32ErrorCode.ERROR_NOT_SUPPORTED;
                case NTStatus.STATUS_USER_MAPPED_FILE: return Win32ErrorCode.ERROR_USER_MAPPED_FILE;
                case NTStatus.STATUS_PLUGPLAY_NO_DEVICE: return Win32ErrorCode.ERROR_SERVICE_DISABLED;
                case NTStatus.STATUS_WMI_GUID_NOT_FOUND: return Win32ErrorCode.ERROR_WMI_GUID_NOT_FOUND;
                case NTStatus.STATUS_WMI_INSTANCE_NOT_FOUND: return Win32ErrorCode.ERROR_WMI_INSTANCE_NOT_FOUND;
                case NTStatus.STATUS_WMI_ITEMID_NOT_FOUND: return Win32ErrorCode.ERROR_WMI_ITEMID_NOT_FOUND;
                case NTStatus.STATUS_WMI_TRY_AGAIN: return Win32ErrorCode.ERROR_WMI_TRY_AGAIN;
                case NTStatus.STATUS_WMI_READ_ONLY: return Win32ErrorCode.ERROR_WMI_READ_ONLY;
                case NTStatus.STATUS_WMI_SET_FAILURE: return Win32ErrorCode.ERROR_WMI_SET_FAILURE;
                case NTStatus.STATUS_WMI_NOT_SUPPORTED: return Win32ErrorCode.ERROR_NOT_SUPPORTED;
                case NTStatus.STATUS_WMI_GUID_DISCONNECTED: return Win32ErrorCode.ERROR_WMI_GUID_DISCONNECTED;
                case NTStatus.STATUS_WMI_ALREADY_DISABLED: return Win32ErrorCode.ERROR_WMI_ALREADY_DISABLED;
                case NTStatus.STATUS_WMI_ALREADY_ENABLED: return Win32ErrorCode.ERROR_WMI_ALREADY_ENABLED;
                ////case NTStatus.STATUS_COPY_PROTECTION_FAILURE: return Win32ErrorCode.STG_E_STATUS_COPY_PROTECTION_FAILURE;
                ////case NTStatus.STATUS_CSS_AUTHENTICATION_FAILURE: return Win32ErrorCode.STG_E_CSS_AUTHENTICATION_FAILURE;
                ////case NTStatus.STATUS_CSS_KEY_NOT_PRESENT: return Win32ErrorCode.STG_E_CSS_KEY_NOT_PRESENT;
                ////case NTStatus.STATUS_CSS_KEY_NOT_ESTABLISHED: return Win32ErrorCode.STG_E_CSS_KEY_NOT_ESTABLISHED;
                ////case NTStatus.STATUS_CSS_SCRAMBLED_SECTOR: return Win32ErrorCode.STG_E_CSS_SCRAMBLED_SECTOR;
                ////case NTStatus.STATUS_CSS_REGION_MISMATCH: return Win32ErrorCode.STG_E_CSS_REGION_MISMATCH;
                ////case NTStatus.STATUS_CSS_RESETS_EXHAUSTED: return Win32ErrorCode.STG_E_RESETS_EXHAUSTED;
                case NTStatus.RPC_NT_SERVER_UNAVAILABLE: return Win32ErrorCode.RPC_S_SERVER_UNAVAILABLE;
                case NTStatus.RPC_NT_INVALID_STRING_BINDING: return Win32ErrorCode.RPC_S_INVALID_STRING_BINDING;
                case NTStatus.RPC_NT_WRONG_KIND_OF_BINDING: return Win32ErrorCode.RPC_S_WRONG_KIND_OF_BINDING;
                case NTStatus.RPC_NT_PROTSEQ_NOT_SUPPORTED: return Win32ErrorCode.RPC_S_PROTSEQ_NOT_SUPPORTED;
                case NTStatus.RPC_NT_INVALID_RPC_PROTSEQ: return Win32ErrorCode.RPC_S_INVALID_RPC_PROTSEQ;
                case NTStatus.RPC_NT_INVALID_STRING_UUID: return Win32ErrorCode.RPC_S_INVALID_STRING_UUID;
                case NTStatus.RPC_NT_INVALID_ENDPOINT_FORMAT: return Win32ErrorCode.RPC_S_INVALID_ENDPOINT_FORMAT;
                case NTStatus.RPC_NT_INVALID_NET_ADDR: return Win32ErrorCode.RPC_S_INVALID_NET_ADDR;
                case NTStatus.RPC_NT_NO_ENDPOINT_FOUND: return Win32ErrorCode.RPC_S_NO_ENDPOINT_FOUND;
                case NTStatus.RPC_NT_INVALID_TIMEOUT: return Win32ErrorCode.RPC_S_INVALID_TIMEOUT;
                case NTStatus.RPC_NT_OBJECT_NOT_FOUND: return Win32ErrorCode.RPC_S_OBJECT_NOT_FOUND;
                case NTStatus.RPC_NT_ALREADY_REGISTERED: return Win32ErrorCode.RPC_S_ALREADY_REGISTERED;
                case NTStatus.RPC_NT_TYPE_ALREADY_REGISTERED: return Win32ErrorCode.RPC_S_TYPE_ALREADY_REGISTERED;
                case NTStatus.RPC_NT_ALREADY_LISTENING: return Win32ErrorCode.RPC_S_ALREADY_LISTENING;
                case NTStatus.RPC_NT_NO_PROTSEQS_REGISTERED: return Win32ErrorCode.RPC_S_NO_PROTSEQS_REGISTERED;
                case NTStatus.RPC_NT_NOT_LISTENING: return Win32ErrorCode.RPC_S_NOT_LISTENING;
                case NTStatus.RPC_NT_UNKNOWN_MGR_TYPE: return Win32ErrorCode.RPC_S_UNKNOWN_MGR_TYPE;
                case NTStatus.RPC_NT_UNKNOWN_IF: return Win32ErrorCode.RPC_S_UNKNOWN_IF;
                case NTStatus.RPC_NT_NO_BINDINGS: return Win32ErrorCode.RPC_S_NO_BINDINGS;
                case NTStatus.RPC_NT_NO_MORE_BINDINGS: return Win32ErrorCode.RPC_S_NO_MORE_BINDINGS;
                case NTStatus.RPC_NT_NO_PROTSEQS: return Win32ErrorCode.RPC_S_NO_PROTSEQS;
                case NTStatus.RPC_NT_CANT_CREATE_ENDPOINT: return Win32ErrorCode.RPC_S_CANT_CREATE_ENDPOINT;
                case NTStatus.RPC_NT_OUT_OF_RESOURCES: return Win32ErrorCode.RPC_S_OUT_OF_RESOURCES;
                case NTStatus.RPC_NT_SERVER_TOO_BUSY: return Win32ErrorCode.RPC_S_SERVER_TOO_BUSY;
                case NTStatus.RPC_NT_INVALID_NETWORK_OPTIONS: return Win32ErrorCode.RPC_S_INVALID_NETWORK_OPTIONS;
                case NTStatus.RPC_NT_NO_CALL_ACTIVE: return Win32ErrorCode.RPC_S_NO_CALL_ACTIVE;
                case NTStatus.RPC_NT_CALL_FAILED: return Win32ErrorCode.RPC_S_CALL_FAILED;
                case NTStatus.RPC_NT_CALL_FAILED_DNE: return Win32ErrorCode.RPC_S_CALL_FAILED_DNE;
                case NTStatus.RPC_NT_PROTOCOL_ERROR: return Win32ErrorCode.RPC_S_PROTOCOL_ERROR;
                case NTStatus.RPC_NT_UNSUPPORTED_TRANS_SYN: return Win32ErrorCode.RPC_S_UNSUPPORTED_TRANS_SYN;
                case NTStatus.RPC_NT_UNSUPPORTED_TYPE: return Win32ErrorCode.RPC_S_UNSUPPORTED_TYPE;
                case NTStatus.RPC_NT_INVALID_TAG: return Win32ErrorCode.RPC_S_INVALID_TAG;
                case NTStatus.RPC_NT_INVALID_BOUND: return Win32ErrorCode.RPC_S_INVALID_BOUND;
                case NTStatus.RPC_NT_NO_ENTRY_NAME: return Win32ErrorCode.RPC_S_NO_ENTRY_NAME;
                case NTStatus.RPC_NT_INVALID_NAME_SYNTAX: return Win32ErrorCode.RPC_S_INVALID_NAME_SYNTAX;
                case NTStatus.RPC_NT_UNSUPPORTED_NAME_SYNTAX: return Win32ErrorCode.RPC_S_UNSUPPORTED_NAME_SYNTAX;
                case NTStatus.RPC_NT_UUID_NO_ADDRESS: return Win32ErrorCode.RPC_S_UUID_NO_ADDRESS;
                case NTStatus.RPC_NT_DUPLICATE_ENDPOINT: return Win32ErrorCode.RPC_S_DUPLICATE_ENDPOINT;
                case NTStatus.RPC_NT_UNKNOWN_AUTHN_TYPE: return Win32ErrorCode.RPC_S_UNKNOWN_AUTHN_TYPE;
                case NTStatus.RPC_NT_MAX_CALLS_TOO_SMALL: return Win32ErrorCode.RPC_S_MAX_CALLS_TOO_SMALL;
                case NTStatus.RPC_NT_STRING_TOO_LONG: return Win32ErrorCode.RPC_S_STRING_TOO_LONG;
                case NTStatus.RPC_NT_PROTSEQ_NOT_FOUND: return Win32ErrorCode.RPC_S_PROTSEQ_NOT_FOUND;
                case NTStatus.RPC_NT_PROCNUM_OUT_OF_RANGE: return Win32ErrorCode.RPC_S_PROCNUM_OUT_OF_RANGE;
                case NTStatus.RPC_NT_BINDING_HAS_NO_AUTH: return Win32ErrorCode.RPC_S_BINDING_HAS_NO_AUTH;
                case NTStatus.RPC_NT_UNKNOWN_AUTHN_SERVICE: return Win32ErrorCode.RPC_S_UNKNOWN_AUTHN_SERVICE;
                case NTStatus.RPC_NT_UNKNOWN_AUTHN_LEVEL: return Win32ErrorCode.RPC_S_UNKNOWN_AUTHN_LEVEL;
                case NTStatus.RPC_NT_INVALID_AUTH_IDENTITY: return Win32ErrorCode.RPC_S_INVALID_AUTH_IDENTITY;
                case NTStatus.RPC_NT_UNKNOWN_AUTHZ_SERVICE: return Win32ErrorCode.RPC_S_UNKNOWN_AUTHZ_SERVICE;
                case NTStatus.EPT_NT_INVALID_ENTRY: return Win32ErrorCode.EPT_S_INVALID_ENTRY;
                case NTStatus.EPT_NT_CANT_PERFORM_OP: return Win32ErrorCode.EPT_S_CANT_PERFORM_OP;
                case NTStatus.EPT_NT_NOT_REGISTERED: return Win32ErrorCode.EPT_S_NOT_REGISTERED;
                case NTStatus.RPC_NT_NOTHING_TO_EXPORT: return Win32ErrorCode.RPC_S_NOTHING_TO_EXPORT;
                case NTStatus.RPC_NT_INCOMPLETE_NAME: return Win32ErrorCode.RPC_S_INCOMPLETE_NAME;
                case NTStatus.RPC_NT_INVALID_VERS_OPTION: return Win32ErrorCode.RPC_S_INVALID_VERS_OPTION;
                case NTStatus.RPC_NT_NO_MORE_MEMBERS: return Win32ErrorCode.RPC_S_NO_MORE_MEMBERS;
                case NTStatus.RPC_NT_NOT_ALL_OBJS_UNEXPORTED: return Win32ErrorCode.RPC_S_NOT_ALL_OBJS_UNEXPORTED;
                case NTStatus.RPC_NT_INTERFACE_NOT_FOUND: return Win32ErrorCode.RPC_S_INTERFACE_NOT_FOUND;
                case NTStatus.RPC_NT_ENTRY_ALREADY_EXISTS: return Win32ErrorCode.RPC_S_ENTRY_ALREADY_EXISTS;
                case NTStatus.RPC_NT_ENTRY_NOT_FOUND: return Win32ErrorCode.RPC_S_ENTRY_NOT_FOUND;
                case NTStatus.RPC_NT_NAME_SERVICE_UNAVAILABLE: return Win32ErrorCode.RPC_S_NAME_SERVICE_UNAVAILABLE;
                case NTStatus.RPC_NT_INVALID_NAF_ID: return Win32ErrorCode.RPC_S_INVALID_NAF_ID;
                case NTStatus.RPC_NT_CANNOT_SUPPORT: return Win32ErrorCode.RPC_S_CANNOT_SUPPORT;
                case NTStatus.RPC_NT_NO_CONTEXT_AVAILABLE: return Win32ErrorCode.RPC_S_NO_CONTEXT_AVAILABLE;
                case NTStatus.RPC_NT_INTERNAL_ERROR: return Win32ErrorCode.RPC_S_INTERNAL_ERROR;
                case NTStatus.RPC_NT_ZERO_DIVIDE: return Win32ErrorCode.RPC_S_ZERO_DIVIDE;
                case NTStatus.RPC_NT_ADDRESS_ERROR: return Win32ErrorCode.RPC_S_ADDRESS_ERROR;
                case NTStatus.RPC_NT_FP_DIV_ZERO: return Win32ErrorCode.RPC_S_FP_DIV_ZERO;
                case NTStatus.RPC_NT_FP_UNDERFLOW: return Win32ErrorCode.RPC_S_FP_UNDERFLOW;
                case NTStatus.RPC_NT_FP_OVERFLOW: return Win32ErrorCode.RPC_S_FP_OVERFLOW;
                case NTStatus.RPC_NT_NO_MORE_ENTRIES: return Win32ErrorCode.RPC_X_NO_MORE_ENTRIES;
                case NTStatus.RPC_NT_SS_CHAR_TRANS_OPEN_FAIL: return Win32ErrorCode.RPC_X_SS_CHAR_TRANS_OPEN_FAIL;
                case NTStatus.RPC_NT_SS_CHAR_TRANS_SHORT_FILE: return Win32ErrorCode.RPC_X_SS_CHAR_TRANS_SHORT_FILE;
                case NTStatus.RPC_NT_SS_CONTEXT_MISMATCH: return Win32ErrorCode.ERROR_INVALID_HANDLE;
                case NTStatus.RPC_NT_SS_CONTEXT_DAMAGED: return Win32ErrorCode.RPC_X_SS_CONTEXT_DAMAGED;
                case NTStatus.RPC_NT_SS_HANDLES_MISMATCH: return Win32ErrorCode.RPC_X_SS_HANDLES_MISMATCH;
                case NTStatus.RPC_NT_SS_CANNOT_GET_CALL_HANDLE: return Win32ErrorCode.RPC_X_SS_CANNOT_GET_CALL_HANDLE;
                case NTStatus.RPC_NT_NULL_REF_POINTER: return Win32ErrorCode.RPC_X_NULL_REF_POINTER;
                case NTStatus.RPC_NT_ENUM_VALUE_OUT_OF_RANGE: return Win32ErrorCode.RPC_X_ENUM_VALUE_OUT_OF_RANGE;
                case NTStatus.RPC_NT_BYTE_COUNT_TOO_SMALL: return Win32ErrorCode.RPC_X_BYTE_COUNT_TOO_SMALL;
                case NTStatus.RPC_NT_BAD_STUB_DATA: return Win32ErrorCode.RPC_X_BAD_STUB_DATA;
                case NTStatus.RPC_NT_INVALID_OBJECT: return Win32ErrorCode.RPC_S_INVALID_OBJECT;
                case NTStatus.STATUS_NO_TRUST_LSA_SECRET: return Win32ErrorCode.ERROR_NO_TRUST_LSA_SECRET;
                case NTStatus.STATUS_NO_TRUST_SAM_ACCOUNT: return Win32ErrorCode.ERROR_NO_TRUST_SAM_ACCOUNT;
                case NTStatus.STATUS_TRUSTED_DOMAIN_FAILURE: return Win32ErrorCode.ERROR_TRUSTED_DOMAIN_FAILURE;
                ////case NTStatus.STATUS_TRUSTED_RELATIONSHIP_FAILURE: return Win32ErrorCode.ERROR_TRUSTED_RELATIONSHIP_FAILURE;
                case NTStatus.STATUS_TRUST_FAILURE: return Win32ErrorCode.ERROR_TRUST_FAILURE;
                case NTStatus.RPC_NT_CALL_IN_PROGRESS: return Win32ErrorCode.RPC_S_CALL_IN_PROGRESS;
                case NTStatus.STATUS_LOG_FILE_FULL: return Win32ErrorCode.ERROR_LOG_FILE_FULL;
                case NTStatus.STATUS_EVENTLOG_FILE_CHANGED: return Win32ErrorCode.ERROR_EVENTLOG_FILE_CHANGED;
                ////case NTStatus.STATUS_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT: return Win32ErrorCode.ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT;
                ////case NTStatus.STATUS_NOLOGON_WORKSTATION_TRUST_ACCOUNT: return Win32ErrorCode.ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT;
                ////case NTStatus.STATUS_NOLOGON_SERVER_TRUST_ACCOUNT: return Win32ErrorCode.ERROR_NOLOGON_SERVER_TRUST_ACCOUNT;
                case NTStatus.STATUS_DOMAIN_TRUST_INCONSISTENT: return Win32ErrorCode.ERROR_DOMAIN_TRUST_INCONSISTENT;
                case NTStatus.STATUS_NO_USER_SESSION_KEY: return Win32ErrorCode.ERROR_NO_USER_SESSION_KEY;
                case NTStatus.STATUS_POSSIBLE_DEADLOCK: return Win32ErrorCode.ERROR_POSSIBLE_DEADLOCK;
                case NTStatus.STATUS_IMAGE_ALREADY_LOADED: return Win32ErrorCode.ERROR_SERVICE_ALREADY_RUNNING;
                case NTStatus.RPC_NT_GROUP_MEMBER_NOT_FOUND: return Win32ErrorCode.RPC_S_GROUP_MEMBER_NOT_FOUND;
                case NTStatus.RPC_NT_NO_INTERFACES: return Win32ErrorCode.RPC_S_NO_INTERFACES;
                case NTStatus.RPC_NT_CALL_CANCELLED: return Win32ErrorCode.RPC_S_CALL_CANCELLED;
                case NTStatus.RPC_NT_BINDING_INCOMPLETE: return Win32ErrorCode.RPC_S_BINDING_INCOMPLETE;
                case NTStatus.RPC_NT_COMM_FAILURE: return Win32ErrorCode.RPC_S_COMM_FAILURE;
                case NTStatus.RPC_NT_UNSUPPORTED_AUTHN_LEVEL: return Win32ErrorCode.RPC_S_UNSUPPORTED_AUTHN_LEVEL;
                case NTStatus.RPC_NT_NO_PRINC_NAME: return Win32ErrorCode.RPC_S_NO_PRINC_NAME;
                case NTStatus.RPC_NT_NOT_RPC_ERROR: return Win32ErrorCode.RPC_S_NOT_RPC_ERROR;
                case NTStatus.RPC_NT_UUID_LOCAL_ONLY: return Win32ErrorCode.RPC_S_UUID_LOCAL_ONLY;
                case NTStatus.RPC_NT_SEC_PKG_ERROR: return Win32ErrorCode.RPC_S_SEC_PKG_ERROR;
                case NTStatus.RPC_NT_NOT_CANCELLED: return Win32ErrorCode.RPC_S_NOT_CANCELLED;
                case NTStatus.RPC_NT_INVALID_ES_ACTION: return Win32ErrorCode.RPC_X_INVALID_ES_ACTION;
                case NTStatus.RPC_NT_WRONG_ES_VERSION: return Win32ErrorCode.RPC_X_WRONG_ES_VERSION;
                case NTStatus.RPC_NT_WRONG_STUB_VERSION: return Win32ErrorCode.RPC_X_WRONG_STUB_VERSION;
                case NTStatus.RPC_NT_INVALID_PIPE_OBJECT: return Win32ErrorCode.RPC_X_INVALID_PIPE_OBJECT;
                ////case NTStatus.RPC_NT_INVALID_PIPE_OPERATION: return Win32ErrorCode.RPC_X_INVALID_PIPE_OPERATION;
                case NTStatus.RPC_NT_WRONG_PIPE_VERSION: return Win32ErrorCode.RPC_X_WRONG_PIPE_VERSION;
                case NTStatus.EPT_NT_CANT_CREATE: return Win32ErrorCode.EPT_S_CANT_CREATE;
                case NTStatus.RPC_NT_SEND_INCOMPLETE: return Win32ErrorCode.RPC_S_SEND_INCOMPLETE;
                case NTStatus.RPC_NT_INVALID_ASYNC_HANDLE: return Win32ErrorCode.RPC_S_INVALID_ASYNC_HANDLE;
                case NTStatus.RPC_NT_INVALID_ASYNC_CALL: return Win32ErrorCode.RPC_S_INVALID_ASYNC_CALL;
                case NTStatus.RPC_NT_PIPE_CLOSED: return Win32ErrorCode.RPC_X_PIPE_CLOSED;
                case NTStatus.RPC_NT_PIPE_EMPTY: return Win32ErrorCode.RPC_X_PIPE_EMPTY;
                case NTStatus.RPC_NT_PIPE_DISCIPLINE_ERROR: return Win32ErrorCode.RPC_X_PIPE_DISCIPLINE_ERROR;
                case NTStatus.STATUS_NO_BROWSER_SERVERS_FOUND: return Win32ErrorCode.ERROR_NO_BROWSER_SERVERS_FOUND;
                case NTStatus.STATUS_MAPPED_ALIGNMENT: return Win32ErrorCode.ERROR_MAPPED_ALIGNMENT;
                case NTStatus.STATUS_CONNECTION_IN_USE: return Win32ErrorCode.ERROR_DEVICE_IN_USE;
                case NTStatus.STATUS_VERIFY_REQUIRED: return Win32ErrorCode.ERROR_MEDIA_CHANGED;
                case NTStatus.STATUS_ALREADY_DISCONNECTED: return Win32ErrorCode.ERROR_ACTIVE_CONNECTIONS;
                case NTStatus.STATUS_CONNECTION_REFUSED: return Win32ErrorCode.ERROR_CONNECTION_REFUSED;
                case NTStatus.STATUS_GRACEFUL_DISCONNECT: return Win32ErrorCode.ERROR_GRACEFUL_DISCONNECT;
                ////case NTStatus.STATUS_ADDRESS_ALREADY_ASSOCIATED: return Win32ErrorCode.ERROR_ADDRESS_ALREADY_ASSOCIATED;
                case NTStatus.STATUS_ADDRESS_NOT_ASSOCIATED: return Win32ErrorCode.ERROR_ADDRESS_NOT_ASSOCIATED;
                case NTStatus.STATUS_CONNECTION_INVALID: return Win32ErrorCode.ERROR_CONNECTION_INVALID;
                case NTStatus.STATUS_CONNECTION_ACTIVE: return Win32ErrorCode.ERROR_CONNECTION_ACTIVE;
                case NTStatus.STATUS_NETWORK_UNREACHABLE: return Win32ErrorCode.ERROR_NETWORK_UNREACHABLE;
                case NTStatus.STATUS_HOST_UNREACHABLE: return Win32ErrorCode.ERROR_HOST_UNREACHABLE;
                case NTStatus.STATUS_HOST_DOWN: return Win32ErrorCode.ERROR_HOST_DOWN;
                case NTStatus.STATUS_PROTOCOL_UNREACHABLE: return Win32ErrorCode.ERROR_PROTOCOL_UNREACHABLE;
                case NTStatus.STATUS_PORT_UNREACHABLE: return Win32ErrorCode.ERROR_PORT_UNREACHABLE;
                case NTStatus.STATUS_REQUEST_ABORTED: return Win32ErrorCode.ERROR_REQUEST_ABORTED;
                case NTStatus.STATUS_CONNECTION_ABORTED: return Win32ErrorCode.ERROR_CONNECTION_ABORTED;
                case NTStatus.STATUS_CONNECTION_COUNT_LIMIT: return Win32ErrorCode.ERROR_CONNECTION_COUNT_LIMIT;
                case NTStatus.STATUS_PATH_NOT_COVERED: return Win32ErrorCode.ERROR_HOST_UNREACHABLE;
                case NTStatus.STATUS_LOGIN_TIME_RESTRICTION: return Win32ErrorCode.ERROR_LOGIN_TIME_RESTRICTION;
                case NTStatus.STATUS_LOGIN_WKSTA_RESTRICTION: return Win32ErrorCode.ERROR_LOGIN_WKSTA_RESTRICTION;
                case NTStatus.STATUS_LICENSE_QUOTA_EXCEEDED: return Win32ErrorCode.ERROR_LICENSE_QUOTA_EXCEEDED;
                case NTStatus.STATUS_RESOURCE_NOT_OWNED: return Win32ErrorCode.ERROR_NOT_OWNER;
                ////case NTStatus.STATUS_DUPLICATE_OBJECTID: return Win32ErrorCode.STATUS_DUPLICATE_OBJECTID;
                ////case NTStatus.STATUS_OBJECTID_EXISTS: return Win32ErrorCode.STATUS_OBJECTID_EXISTS;
                case NTStatus.STATUS_OBJECTID_NOT_FOUND: return Win32ErrorCode.ERROR_FILE_NOT_FOUND;
                case NTStatus.STATUS_MFT_TOO_FRAGMENTED: return Win32ErrorCode.ERROR_DISK_TOO_FRAGMENTED;
                ////case NTStatus.SEC_E_INSUFFICIENT_MEMORY: return Win32ErrorCode.ERROR_NO_SYSTEM_RESOURCES;
                ////case NTStatus.SEC_E_INVALID_HANDLE: return Win32ErrorCode.ERROR_INVALID_HANDLE;
                ////case NTStatus.SEC_E_UNSUPPORTED_FUNCTION: return Win32ErrorCode.ERROR_INVALID_FUNCTION;
                ////case NTStatus.SEC_E_TARGET_UNKNOWN: return Win32ErrorCode.ERROR_BAD_NETPATH;
                ////case NTStatus.SEC_E_INTERNAL_ERROR: return Win32ErrorCode.ERROR_INTERNAL_ERROR;
                ////case NTStatus.SEC_E_SECPKG_NOT_FOUND: return Win32ErrorCode.ERROR_NO_SUCH_PACKAGE;
                ////case NTStatus.SEC_E_NOT_OWNER: return Win32ErrorCode.ERROR_NOT_OWNER;
                ////case NTStatus.SEC_E_CANNOT_INSTALL: return Win32ErrorCode.ERROR_NO_SUCH_PACKAGE;
                ////case NTStatus.SEC_E_INVALID_TOKEN: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                ////case NTStatus.SEC_E_CANNOT_PACK: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                ////case NTStatus.SEC_E_QOP_NOT_SUPPORTED: return Win32ErrorCode.ERROR_NOT_SUPPORTED;
                ////case NTStatus.SEC_E_NO_IMPERSONATION: return Win32ErrorCode.ERROR_CANNOT_IMPERSONATE;
                ////case NTStatus.SEC_E_MULTIPLE_ACCOUNTS: return Win32ErrorCode.ERROR_CANNOT_IMPERSONATE;
                ////case NTStatus.SEC_E_LOGON_DENIED: return Win32ErrorCode.ERROR_LOGON_FAILURE;
                ////case NTStatus.SEC_E_UNKNOWN_CREDENTIALS: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                ////case NTStatus.SEC_E_INCOMPLETE_CREDENTIALS: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                ////case NTStatus.SEC_E_NO_CREDENTIALS: return Win32ErrorCode.ERROR_NO_SUCH_LOGON_SESSION;
                ////case NTStatus.SEC_E_MESSAGE_ALTERED: return Win32ErrorCode.ERROR_ACCESS_DENIED;
                ////case NTStatus.SEC_E_OUT_OF_SEQUENCE: return Win32ErrorCode.ERROR_ACCESS_DENIED;
                ////case NTStatus.SEC_E_NO_AUTHENTICATING_AUTHORITY: return Win32ErrorCode.ERROR_NO_LOGON_SERVERS;
                ////case NTStatus.SEC_E_BAD_PKGID: return Win32ErrorCode.ERROR_NO_SUCH_PACKAGE;
                ////case NTStatus.SEC_E_WRONG_PRINCIPAL: return Win32ErrorCode.ERROR_WRONG_TARGET_NAME;
                ////case NTStatus.SEC_E_INCOMPLETE_MESSAGE: return Win32ErrorCode.ERROR_INVALID_USER_BUFFER;
                ////case NTStatus.SEC_E_BUFFER_TOO_SMALL: return Win32ErrorCode.ERROR_INSUFFICIENT_BUFFER;
                ////case NTStatus.SEC_E_UNTRUSTED_ROOT: return Win32ErrorCode.ERROR_TRUST_FAILURE;
                ////case NTStatus.SEC_E_ILLEGAL_MESSAGE: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                ////case NTStatus.SEC_E_CERT_UNKNOWN: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                ////case NTStatus.SEC_E_CERT_EXPIRED: return Win32ErrorCode.ERROR_PASSWORD_EXPIRED;
                ////case NTStatus.SEC_E_ENCRYPT_FAILURE: return Win32ErrorCode.ERROR_ENCRYPTION_FAILED;
                ////case NTStatus.SEC_E_DECRYPT_FAILURE: return Win32ErrorCode.ERROR_DECRYPTION_FAILED;
                ////case NTStatus.SEC_E_ALGORITHM_MISMATCH: return Win32ErrorCode.ERROR_INVALID_FUNCTION;
                ////case NTStatus.SEC_E_CONTEXT_EXPIRED: return Win32ErrorCode.ERROR_CONTEXT_EXPIRED;
                ////case NTStatus.STATUS_BAD_BINDINGS: return Win32ErrorCode.SEC_E_BAD_BINDINGS;
                ////case NTStatus.TRUST_E_CERT_SIGNATURE: return Win32ErrorCode.ERROR_MUTUAL_AUTH_FAILED;
                ////case NTStatus.CRYPT_E_REVOKED: return Win32ErrorCode.ERROR_MUTUAL_AUTH_FAILED;
                ////case NTStatus.CRYPT_E_NO_REVOCATION_CHECK: return Win32ErrorCode.ERROR_MUTUAL_AUTH_FAILED;
                ////case NTStatus.CRYPT_E_REVOCATION_OFFLINE: return Win32ErrorCode.ERROR_MUTUAL_AUTH_FAILED;
                case NTStatus.STATUS_SHUTDOWN_IN_PROGRESS: return Win32ErrorCode.ERROR_SHUTDOWN_IN_PROGRESS;
                ////case NTStatus.STATUS_SERVER_SHUTDOWN_IN_PROGRESS: return Win32ErrorCode.ERROR_SERVER_SHUTDOWN_IN_PROGRESS;
                ////case NTStatus.STATUS_DS_MEMBERSHIP_EVALUATED_LOCALLY: return Win32ErrorCode.ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY;
                case NTStatus.STATUS_DS_NO_ATTRIBUTE_OR_VALUE: return Win32ErrorCode.ERROR_DS_NO_ATTRIBUTE_OR_VALUE;
                ////case NTStatus.STATUS_DS_INVALID_ATTRIBUTE_SYNTAX: return Win32ErrorCode.ERROR_DS_INVALID_ATTRIBUTE_SYNTAX;
                ////case NTStatus.STATUS_DS_ATTRIBUTE_TYPE_UNDEFINED: return Win32ErrorCode.ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED;
                ////case NTStatus.STATUS_DS_ATTRIBUTE_OR_VALUE_EXISTS: return Win32ErrorCode.ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS;
                case NTStatus.STATUS_DS_BUSY: return Win32ErrorCode.ERROR_DS_BUSY;
                case NTStatus.STATUS_DS_UNAVAILABLE: return Win32ErrorCode.ERROR_DS_UNAVAILABLE;
                case NTStatus.STATUS_DS_NO_RIDS_ALLOCATED: return Win32ErrorCode.ERROR_DS_NO_RIDS_ALLOCATED;
                case NTStatus.STATUS_DS_NO_MORE_RIDS: return Win32ErrorCode.ERROR_DS_NO_MORE_RIDS;
                case NTStatus.STATUS_DS_INCORRECT_ROLE_OWNER: return Win32ErrorCode.ERROR_DS_INCORRECT_ROLE_OWNER;
                case NTStatus.STATUS_DS_RIDMGR_INIT_ERROR: return Win32ErrorCode.ERROR_DS_RIDMGR_INIT_ERROR;
                case NTStatus.STATUS_DS_OBJ_CLASS_VIOLATION: return Win32ErrorCode.ERROR_DS_OBJ_CLASS_VIOLATION;
                case NTStatus.STATUS_DS_CANT_ON_NON_LEAF: return Win32ErrorCode.ERROR_DS_CANT_ON_NON_LEAF;
                case NTStatus.STATUS_DS_CANT_ON_RDN: return Win32ErrorCode.ERROR_DS_CANT_ON_RDN;
                case NTStatus.STATUS_DS_CROSS_DOM_MOVE_FAILED: return Win32ErrorCode.ERROR_DS_CROSS_DOM_MOVE_ERROR;
                case NTStatus.STATUS_DS_GC_NOT_AVAILABLE: return Win32ErrorCode.ERROR_DS_GC_NOT_AVAILABLE;
                case NTStatus.STATUS_DS_CANT_MOD_OBJ_CLASS: return Win32ErrorCode.ERROR_DS_CANT_MOD_OBJ_CLASS;
                case NTStatus.STATUS_DS_ADMIN_LIMIT_EXCEEDED: return Win32ErrorCode.ERROR_DS_ADMIN_LIMIT_EXCEEDED;
                case NTStatus.STATUS_DIRECTORY_SERVICE_REQUIRED: return Win32ErrorCode.ERROR_DS_DS_REQUIRED;
                case NTStatus.STATUS_DS_SAM_INIT_FAILURE: return Win32ErrorCode.ERROR_DS_SAM_INIT_FAILURE;
                case NTStatus.STATUS_DS_CANT_START: return Win32ErrorCode.ERROR_DS_CANT_START;
                case NTStatus.STATUS_DS_INIT_FAILURE: return Win32ErrorCode.ERROR_DS_INIT_FAILURE;
                case NTStatus.STATUS_SAM_INIT_FAILURE: return Win32ErrorCode.ERROR_SAM_INIT_FAILURE;
                ////case NTStatus.STATUS_DS_SENSITIVE_GROUP_VIOLATION: return Win32ErrorCode.ERROR_DS_SENSITIVE_GROUP_VIOLATION;
                ////case NTStatus.STATUS_DS_CANT_MOD_PRIMARYGROUPID: return Win32ErrorCode.ERROR_DS_CANT_MOD_PRIMARYGROUPID;
                ////case NTStatus.STATUS_DS_INVALID_GROUP_TYPE: return Win32ErrorCode.ERROR_DS_INVALID_GROUP_TYPE;
                ////case NTStatus.STATUS_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN: return Win32ErrorCode.ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN;
                ////case NTStatus.STATUS_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN: return Win32ErrorCode.ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN;
                ////case NTStatus.STATUS_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER: return Win32ErrorCode.ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER;
                ////case NTStatus.STATUS_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER: return Win32ErrorCode.ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER;
                ////case NTStatus.STATUS_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER: return Win32ErrorCode.ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER;
                ////case NTStatus.STATUS_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER: return Win32ErrorCode.ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER;
                ////case NTStatus.STATUS_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER: return Win32ErrorCode.ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER;
                case NTStatus.STATUS_DS_HAVE_PRIMARY_MEMBERS: return Win32ErrorCode.ERROR_DS_HAVE_PRIMARY_MEMBERS;
                case NTStatus.STATUS_DS_GC_REQUIRED: return Win32ErrorCode.ERROR_DS_GC_REQUIRED;
                ////case NTStatus.STATUS_DS_LOCAL_MEMBER_OF_LOCAL_ONLY: return Win32ErrorCode.ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY;
                ////case NTStatus.STATUS_DS_NO_FPO_IN_UNIVERSAL_GROUPS: return Win32ErrorCode.ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS;
                ////case NTStatus.STATUS_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED: return Win32ErrorCode.ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED;
                ////case NTStatus.STATUS_SAM_NEED_BOOTKEY_PASSWORD: return Win32ErrorCode.ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD;
                ////case NTStatus.STATUS_SAM_NEED_BOOTKEY_FLOPPY: return Win32ErrorCode.ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY;
                ////case NTStatus.STATUS_DS_INIT_FAILURE_CONSOLE: return Win32ErrorCode.ERROR_DS_INIT_FAILURE_CONSOLE;
                ////case NTStatus.STATUS_DS_SAM_INIT_FAILURE_CONSOLE: return Win32ErrorCode.ERROR_DS_SAM_INIT_FAILURE_CONSOLE;
                ////case NTStatus.STATUS_UNFINISHED_CONTEXT_DELETED: return Win32ErrorCode.SEC_E_UNFINISHED_CONTEXT_DELETED;
                ////case NTStatus.STATUS_NO_TGT_REPLY: return Win32ErrorCode.SEC_E_NO_TGT_REPLY;
                ////case NTStatus.STATUS_NO_IP_ADDRESSES: return Win32ErrorCode.SEC_E_NO_IP_ADDRESSES;
                ////case NTStatus.STATUS_WRONG_CREDENTIAL_HANDLE: return Win32ErrorCode.SEC_E_WRONG_CREDENTIAL_HANDLE;
                ////case NTStatus.STATUS_CRYPTO_SYSTEM_INVALID: return Win32ErrorCode.SEC_E_CRYPTO_SYSTEM_INVALID;
                ////case NTStatus.STATUS_MAX_REFERRALS_EXCEEDED: return Win32ErrorCode.SEC_E_MAX_REFERRALS_EXCEEDED;
                ////case NTStatus.STATUS_MUST_BE_KDC: return Win32ErrorCode.SEC_E_MUST_BE_KDC;
                ////case NTStatus.STATUS_STRONG_CRYPTO_NOT_SUPPORTED: return Win32ErrorCode.SEC_E_STRONG_CRYPTO_NOT_SUPPORTED;
                ////case NTStatus.STATUS_TOO_MANY_PRINCIPALS: return Win32ErrorCode.SEC_E_TOO_MANY_PRINCIPALS;
                ////case NTStatus.STATUS_NO_PA_DATA: return Win32ErrorCode.SEC_E_NO_PA_DATA;
                ////case NTStatus.STATUS_PKINIT_NAME_MISMATCH: return Win32ErrorCode.SEC_E_PKINIT_NAME_MISMATCH;
                ////case NTStatus.STATUS_SMARTCARD_LOGON_REQUIRED: return Win32ErrorCode.SEC_E_SMARTCARD_LOGON_REQUIRED;
                ////case NTStatus.STATUS_KDC_INVALID_REQUEST: return Win32ErrorCode.SEC_E_KDC_INVALID_REQUEST;
                ////case NTStatus.STATUS_KDC_UNABLE_TO_REFER: return Win32ErrorCode.SEC_E_KDC_UNABLE_TO_REFER;
                ////case NTStatus.STATUS_KDC_UNKNOWN_ETYPE: return Win32ErrorCode.SEC_E_KDC_UNKNOWN_ETYPE;
                ////case NTStatus.STATUS_UNSUPPORTED_PREAUTH: return Win32ErrorCode.SEC_E_UNSUPPORTED_PREAUTH;
                case NTStatus.STATUS_SHARED_POLICY: return Win32ErrorCode.ERROR_SHARED_POLICY;
                case NTStatus.STATUS_POLICY_OBJECT_NOT_FOUND: return Win32ErrorCode.ERROR_POLICY_OBJECT_NOT_FOUND;
                case NTStatus.STATUS_POLICY_ONLY_IN_DS: return Win32ErrorCode.ERROR_POLICY_ONLY_IN_DS;
                case NTStatus.STATUS_DEVICE_REMOVED: return Win32ErrorCode.ERROR_DEVICE_REMOVED;
                case NTStatus.STATUS_RETRY: return Win32ErrorCode.ERROR_RETRY;
                case NTStatus.STATUS_NOT_SUPPORTED_ON_SBS: return Win32ErrorCode.ERROR_NOT_SUPPORTED_ON_SBS;
                case NTStatus.STATUS_DRIVER_BLOCKED_CRITICAL: return Win32ErrorCode.ERROR_DRIVER_BLOCKED;
                case NTStatus.STATUS_DRIVER_BLOCKED: return Win32ErrorCode.ERROR_DRIVER_BLOCKED;
                ////case NTStatus.STATUS_PRENT4_MACHINE_ACCOUNT: return Win32ErrorCode.ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4;
                ////case NTStatus.STATUS_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER: return Win32ErrorCode.ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER;
                case NTStatus.STATUS_DS_SHUTTING_DOWN: return Win32ErrorCode.ERROR_DS_SHUTTING_DOWN;
                case NTStatus.STATUS_ACCESS_DISABLED_BY_POLICY_DEFAULT: return Win32ErrorCode.ERROR_ACCESS_DISABLED_BY_POLICY;
                case NTStatus.STATUS_ACCESS_DISABLED_BY_POLICY_PATH: return Win32ErrorCode.ERROR_ACCESS_DISABLED_BY_POLICY;
                case NTStatus.STATUS_ACCESS_DISABLED_BY_POLICY_PUBLISHER: return Win32ErrorCode.ERROR_ACCESS_DISABLED_BY_POLICY;
                case NTStatus.STATUS_ACCESS_DISABLED_BY_POLICY_OTHER: return Win32ErrorCode.ERROR_ACCESS_DISABLED_BY_POLICY;
                case NTStatus.STATUS_FAIL_CHECK: return Win32ErrorCode.ERROR_INVALID_PARAMETER;
                case NTStatus.STATUS_CTX_CLOSE_PENDING: return Win32ErrorCode.ERROR_CTX_CLOSE_PENDING;
                case NTStatus.STATUS_CTX_NO_OUTBUF: return Win32ErrorCode.ERROR_CTX_NO_OUTBUF;
                case NTStatus.STATUS_CTX_MODEM_INF_NOT_FOUND: return Win32ErrorCode.ERROR_CTX_MODEM_INF_NOT_FOUND;
                case NTStatus.STATUS_CTX_INVALID_MODEMNAME: return Win32ErrorCode.ERROR_CTX_INVALID_MODEMNAME;
                case NTStatus.STATUS_CTX_RESPONSE_ERROR: return Win32ErrorCode.ERROR_CTX_MODEM_RESPONSE_ERROR;
                ////case NTStatus.STATUS_CTX_MODEM_RESPONSE_TIMEOUT: return Win32ErrorCode.ERROR_CTX_MODEM_RESPONSE_TIMEOUT;
                ////case NTStatus.STATUS_CTX_MODEM_RESPONSE_NO_CARRIER: return Win32ErrorCode.ERROR_CTX_MODEM_RESPONSE_NO_CARRIER;
                ////case NTStatus.STATUS_CTX_MODEM_RESPONSE_NO_DIALTONE: return Win32ErrorCode.ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE;
                case NTStatus.STATUS_CTX_MODEM_RESPONSE_BUSY: return Win32ErrorCode.ERROR_CTX_MODEM_RESPONSE_BUSY;
                case NTStatus.STATUS_CTX_MODEM_RESPONSE_VOICE: return Win32ErrorCode.ERROR_CTX_MODEM_RESPONSE_VOICE;
                case NTStatus.STATUS_CTX_TD_ERROR: return Win32ErrorCode.ERROR_CTX_TD_ERROR;
                ////case NTStatus.STATUS_LPC_REPLY_LOST: return Win32ErrorCode.ERROR_CONNECTION_ABORTED;
                ////case NTStatus.STATUS_CTX_WINSTATION_NAME_INVALID: return Win32ErrorCode.ERROR_CTX_WINSTATION_NAME_INVALID;
                case NTStatus.STATUS_CTX_WINSTATION_NOT_FOUND: return Win32ErrorCode.ERROR_CTX_WINSTATION_NOT_FOUND;
                ////case NTStatus.STATUS_CTX_WINSTATION_NAME_COLLISION: return Win32ErrorCode.ERROR_CTX_WINSTATION_ALREADY_EXISTS;
                case NTStatus.STATUS_CTX_WINSTATION_BUSY: return Win32ErrorCode.ERROR_CTX_WINSTATION_BUSY;
                case NTStatus.STATUS_CTX_GRAPHICS_INVALID: return Win32ErrorCode.ERROR_CTX_GRAPHICS_INVALID;
                case NTStatus.STATUS_CTX_BAD_VIDEO_MODE: return Win32ErrorCode.ERROR_CTX_BAD_VIDEO_MODE;
                case NTStatus.STATUS_CTX_NOT_CONSOLE: return Win32ErrorCode.ERROR_CTX_NOT_CONSOLE;
                case NTStatus.STATUS_CTX_CLIENT_QUERY_TIMEOUT: return Win32ErrorCode.ERROR_CTX_CLIENT_QUERY_TIMEOUT;
                case NTStatus.STATUS_CTX_CONSOLE_DISCONNECT: return Win32ErrorCode.ERROR_CTX_CONSOLE_DISCONNECT;
                case NTStatus.STATUS_CTX_CONSOLE_CONNECT: return Win32ErrorCode.ERROR_CTX_CONSOLE_CONNECT;
                case NTStatus.STATUS_CTX_SHADOW_DENIED: return Win32ErrorCode.ERROR_CTX_SHADOW_DENIED;
                case NTStatus.STATUS_CTX_SHADOW_INVALID: return Win32ErrorCode.ERROR_CTX_SHADOW_INVALID;
                case NTStatus.STATUS_CTX_SHADOW_DISABLED: return Win32ErrorCode.ERROR_CTX_SHADOW_DISABLED;
                ////case NTStatus.STATUS_CTX_WINSTATION_ACCESS_DENIED: return Win32ErrorCode.ERROR_CTX_WINSTATION_ACCESS_DENIED;
                case NTStatus.STATUS_CTX_INVALID_PD: return Win32ErrorCode.ERROR_CTX_INVALID_PD;
                case NTStatus.STATUS_CTX_PD_NOT_FOUND: return Win32ErrorCode.ERROR_CTX_PD_NOT_FOUND;
                case NTStatus.STATUS_CTX_INVALID_WD: return Win32ErrorCode.ERROR_CTX_INVALID_WD;
                case NTStatus.STATUS_CTX_WD_NOT_FOUND: return Win32ErrorCode.ERROR_CTX_WD_NOT_FOUND;
                case NTStatus.STATUS_CTX_CLIENT_LICENSE_IN_USE: return Win32ErrorCode.ERROR_CTX_CLIENT_LICENSE_IN_USE;
                ////case NTStatus.STATUS_CTX_CLIENT_LICENSE_NOT_SET: return Win32ErrorCode.ERROR_CTX_CLIENT_LICENSE_NOT_SET;
                case NTStatus.STATUS_CTX_LICENSE_NOT_AVAILABLE: return Win32ErrorCode.ERROR_CTX_LICENSE_NOT_AVAILABLE;
                ////case NTStatus.STATUS_CTX_LICENSE_CLIENT_INVALID: return Win32ErrorCode.ERROR_CTX_LICENSE_CLIENT_INVALID;
                case NTStatus.STATUS_CTX_LICENSE_EXPIRED: return Win32ErrorCode.ERROR_CTX_LICENSE_EXPIRED;
                ////case NTStatus.STATUS_CTX_SHADOW_ENDED_BY_MODE_CHANGE: return Win32ErrorCode.ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE;
                case NTStatus.STATUS_CTX_SHADOW_NOT_RUNNING: return Win32ErrorCode.ERROR_CTX_SHADOW_NOT_RUNNING;
                case NTStatus.STATUS_LICENSE_VIOLATION: return Win32ErrorCode.ERROR_CTX_LICENSE_NOT_AVAILABLE;
                ////case NTStatus.STATUS_ENDPOINT_CLOSED: return Win32ErrorCode.ERROR_DEV_NOT_EXIST;
                ////case NTStatus.STATUS_DISCONNECTED: return Win32ErrorCode.ERROR_DEV_NOT_EXIST;
                ////case NTStatus.STATUS_NONEXISTENT_NET_NAME: return Win32ErrorCode.ERROR_DEV_NOT_EXIST;
                case NTStatus.STATUS_NETWORK_SESSION_EXPIRED: return Win32ErrorCode.ERROR_NO_USER_SESSION_KEY;
                case NTStatus.STATUS_FILES_OPEN: return Win32ErrorCode.ERROR_OPEN_FILES;
                case NTStatus.STATUS_SXS_SECTION_NOT_FOUND: return Win32ErrorCode.ERROR_SXS_SECTION_NOT_FOUND;
                case NTStatus.STATUS_SXS_CANT_GEN_ACTCTX: return Win32ErrorCode.ERROR_SXS_CANT_GEN_ACTCTX;
                ////case NTStatus.STATUS_SXS_INVALID_ACTCTXDATA_FORMAT: return Win32ErrorCode.ERROR_SXS_INVALID_ACTCTXDATA_FORMAT;
                case NTStatus.STATUS_SXS_ASSEMBLY_NOT_FOUND: return Win32ErrorCode.ERROR_SXS_ASSEMBLY_NOT_FOUND;
                case NTStatus.STATUS_SXS_MANIFEST_FORMAT_ERROR: return Win32ErrorCode.ERROR_SXS_MANIFEST_FORMAT_ERROR;
                case NTStatus.STATUS_SXS_MANIFEST_PARSE_ERROR: return Win32ErrorCode.ERROR_SXS_MANIFEST_PARSE_ERROR;
                ////case NTStatus.STATUS_SXS_ACTIVATION_CONTEXT_DISABLED: return Win32ErrorCode.ERROR_SXS_ACTIVATION_CONTEXT_DISABLED;
                case NTStatus.STATUS_SXS_KEY_NOT_FOUND: return Win32ErrorCode.ERROR_SXS_KEY_NOT_FOUND;
                case NTStatus.STATUS_SXS_WRONG_SECTION_TYPE: return Win32ErrorCode.ERROR_SXS_WRONG_SECTION_TYPE;
                ////case NTStatus.STATUS_SXS_THREAD_QUERIES_DISABLED: return Win32ErrorCode.ERROR_SXS_THREAD_QUERIES_DISABLED;
                ////case NTStatus.STATUS_SXS_PROCESS_DEFAULT_ALREADY_SET: return Win32ErrorCode.ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET;
                case NTStatus.STATUS_REDIRECTOR_STARTED: return Win32ErrorCode.ERROR_SERVICE_ALREADY_RUNNING;
                ////case NTStatus.STATUS_AUDITING_DISABLED: return Win32ErrorCode.ERROR_AUDITING_DISABLED;
                case NTStatus.STATUS_CLUSTER_NODE_ALREADY_UP: return Win32ErrorCode.ERROR_CLUSTER_NODE_ALREADY_UP;
                case NTStatus.STATUS_CLUSTER_NODE_ALREADY_DOWN: return Win32ErrorCode.ERROR_CLUSTER_NODE_ALREADY_DOWN;
                ////case NTStatus.STATUS_CLUSTER_NETWORK_ALREADY_ONLINE: return Win32ErrorCode.ERROR_CLUSTER_NETWORK_ALREADY_ONLINE;
                ////case NTStatus.STATUS_CLUSTER_NETWORK_ALREADY_OFFLINE: return Win32ErrorCode.ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE;
                ////case NTStatus.STATUS_CLUSTER_NODE_ALREADY_MEMBER: return Win32ErrorCode.ERROR_CLUSTER_NODE_ALREADY_MEMBER;
                case NTStatus.STATUS_CLUSTER_INVALID_NODE: return Win32ErrorCode.ERROR_CLUSTER_INVALID_NODE;
                case NTStatus.STATUS_CLUSTER_NODE_EXISTS: return Win32ErrorCode.ERROR_CLUSTER_NODE_EXISTS;
                case NTStatus.STATUS_CLUSTER_JOIN_IN_PROGRESS: return Win32ErrorCode.ERROR_CLUSTER_JOIN_IN_PROGRESS;
                case NTStatus.STATUS_CLUSTER_NODE_NOT_FOUND: return Win32ErrorCode.ERROR_CLUSTER_NODE_NOT_FOUND;
                ////case NTStatus.STATUS_CLUSTER_LOCAL_NODE_NOT_FOUND: return Win32ErrorCode.ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND;
                case NTStatus.STATUS_CLUSTER_NETWORK_EXISTS: return Win32ErrorCode.ERROR_CLUSTER_NETWORK_EXISTS;
                case NTStatus.STATUS_CLUSTER_NETWORK_NOT_FOUND: return Win32ErrorCode.ERROR_CLUSTER_NETWORK_NOT_FOUND;
                ////case NTStatus.STATUS_CLUSTER_NETINTERFACE_EXISTS: return Win32ErrorCode.ERROR_CLUSTER_NETINTERFACE_EXISTS;
                ////case NTStatus.STATUS_CLUSTER_NETINTERFACE_NOT_FOUND: return Win32ErrorCode.ERROR_CLUSTER_NETINTERFACE_NOT_FOUND;
                case NTStatus.STATUS_CLUSTER_INVALID_REQUEST: return Win32ErrorCode.ERROR_CLUSTER_INVALID_REQUEST;
                ////case NTStatus.STATUS_CLUSTER_INVALID_NETWORK_PROVIDER: return Win32ErrorCode.ERROR_CLUSTER_INVALID_NETWORK_PROVIDER;
                case NTStatus.STATUS_CLUSTER_NODE_DOWN: return Win32ErrorCode.ERROR_CLUSTER_NODE_DOWN;
                case NTStatus.STATUS_CLUSTER_NODE_UNREACHABLE: return Win32ErrorCode.ERROR_CLUSTER_NODE_UNREACHABLE;
                case NTStatus.STATUS_CLUSTER_NODE_NOT_MEMBER: return Win32ErrorCode.ERROR_CLUSTER_NODE_NOT_MEMBER;
                ////case NTStatus.STATUS_CLUSTER_JOIN_NOT_IN_PROGRESS: return Win32ErrorCode.ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS;
                case NTStatus.STATUS_CLUSTER_INVALID_NETWORK: return Win32ErrorCode.ERROR_CLUSTER_INVALID_NETWORK;
                case NTStatus.STATUS_CLUSTER_NODE_UP: return Win32ErrorCode.ERROR_CLUSTER_NODE_UP;
                case NTStatus.STATUS_CLUSTER_NODE_PAUSED: return Win32ErrorCode.ERROR_CLUSTER_NODE_PAUSED;
                case NTStatus.STATUS_CLUSTER_NODE_NOT_PAUSED: return Win32ErrorCode.ERROR_CLUSTER_NODE_NOT_PAUSED;
                ////case NTStatus.STATUS_CLUSTER_NO_SECURITY_CONTEXT: return Win32ErrorCode.ERROR_CLUSTER_NO_SECURITY_CONTEXT;
                ////case NTStatus.STATUS_CLUSTER_NETWORK_NOT_INTERNAL: return Win32ErrorCode.ERROR_CLUSTER_NETWORK_NOT_INTERNAL;
                default:
                    throw new ArgumentException($"Unknown translation for NTStatus value 0x{status:x8}.", nameof(status));
            }
        }
    }
}
