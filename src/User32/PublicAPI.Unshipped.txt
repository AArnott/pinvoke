PInvoke.User32.CURSORINFO
PInvoke.User32.CURSORINFO.CURSORINFO() -> void
PInvoke.User32.CURSORINFO.cbSize -> int
PInvoke.User32.CURSORINFO.flags -> PInvoke.User32.CURSORINFOFlags
PInvoke.User32.CURSORINFO.hCursor -> System.IntPtr
PInvoke.User32.CURSORINFO.ptScreenPos -> PInvoke.POINT
PInvoke.User32.CURSORINFOFlags
PInvoke.User32.CURSORINFOFlags.CURSOR_HIDDEN = 0 -> PInvoke.User32.CURSORINFOFlags
PInvoke.User32.CURSORINFOFlags.CURSOR_SHOWING = 1 -> PInvoke.User32.CURSORINFOFlags
PInvoke.User32.CURSORINFOFlags.CURSOR_SUPPRESSED = 2 -> PInvoke.User32.CURSORINFOFlags
PInvoke.User32.Cursors
PInvoke.User32.Cursors.IDC_APPSTARTING = 32650 -> PInvoke.User32.Cursors
PInvoke.User32.Cursors.IDC_ARROW = 32512 -> PInvoke.User32.Cursors
PInvoke.User32.Cursors.IDC_CROSS = 32515 -> PInvoke.User32.Cursors
PInvoke.User32.Cursors.IDC_HAND = 32649 -> PInvoke.User32.Cursors
PInvoke.User32.Cursors.IDC_HELP = 32651 -> PInvoke.User32.Cursors
PInvoke.User32.Cursors.IDC_IBEAM = 32513 -> PInvoke.User32.Cursors
PInvoke.User32.Cursors.IDC_ICON = 32641 -> PInvoke.User32.Cursors
PInvoke.User32.Cursors.IDC_NO = 32648 -> PInvoke.User32.Cursors
PInvoke.User32.Cursors.IDC_SIZE = 32640 -> PInvoke.User32.Cursors
PInvoke.User32.Cursors.IDC_SIZEALL = 32646 -> PInvoke.User32.Cursors
PInvoke.User32.Cursors.IDC_SIZENESW = 32643 -> PInvoke.User32.Cursors
PInvoke.User32.Cursors.IDC_SIZENS = 32645 -> PInvoke.User32.Cursors
PInvoke.User32.Cursors.IDC_SIZENWSE = 32642 -> PInvoke.User32.Cursors
PInvoke.User32.Cursors.IDC_SIZEWE = 32644 -> PInvoke.User32.Cursors
PInvoke.User32.Cursors.IDC_UPARROW = 32516 -> PInvoke.User32.Cursors
PInvoke.User32.Cursors.IDC_WAIT = 32514 -> PInvoke.User32.Cursors
PInvoke.User32.DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS
PInvoke.User32.DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS.DCDC_DEFAULT = 0 -> PInvoke.User32.DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS
PInvoke.User32.DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS.DCDC_DISABLE_FONT_UPDATE = 1 -> PInvoke.User32.DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS
PInvoke.User32.DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS.DCDC_DISABLE_RELAYOUT = 2 -> PInvoke.User32.DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS
PInvoke.User32.DIALOG_DPI_CHANGE_BEHAVIORS
PInvoke.User32.DIALOG_DPI_CHANGE_BEHAVIORS.DDC_DEFAULT = 0 -> PInvoke.User32.DIALOG_DPI_CHANGE_BEHAVIORS
PInvoke.User32.DIALOG_DPI_CHANGE_BEHAVIORS.DDC_DISABLE_ALL = 1 -> PInvoke.User32.DIALOG_DPI_CHANGE_BEHAVIORS
PInvoke.User32.DIALOG_DPI_CHANGE_BEHAVIORS.DDC_DISABLE_CONTROL_RELAYOUT = PInvoke.User32.DIALOG_DPI_CHANGE_BEHAVIORS.DDC_DISABLE_ALL | PInvoke.User32.DIALOG_DPI_CHANGE_BEHAVIORS.DDC_DISABLE_RESIZE -> PInvoke.User32.DIALOG_DPI_CHANGE_BEHAVIORS
PInvoke.User32.DIALOG_DPI_CHANGE_BEHAVIORS.DDC_DISABLE_RESIZE = 2 -> PInvoke.User32.DIALOG_DPI_CHANGE_BEHAVIORS
PInvoke.User32.DPI_AWARENESS
PInvoke.User32.DPI_AWARENESS.DPI_AWARENESS_INVALID = -1 -> PInvoke.User32.DPI_AWARENESS
PInvoke.User32.DPI_AWARENESS.DPI_AWARENESS_PER_MONITOR_AWARE = 2 -> PInvoke.User32.DPI_AWARENESS
PInvoke.User32.DPI_AWARENESS.DPI_AWARENESS_SYSTEM_AWARE = 1 -> PInvoke.User32.DPI_AWARENESS
PInvoke.User32.DPI_AWARENESS.DPI_AWARENESS_UNAWARE = 0 -> PInvoke.User32.DPI_AWARENESS
PInvoke.User32.DPI_HOSTING_BEHAVIOR
PInvoke.User32.DPI_HOSTING_BEHAVIOR.DPI_HOSTING_BEHAVIOR_DEFAULT = 0 -> PInvoke.User32.DPI_HOSTING_BEHAVIOR
PInvoke.User32.DPI_HOSTING_BEHAVIOR.DPI_HOSTING_BEHAVIOR_INVALID = -1 -> PInvoke.User32.DPI_HOSTING_BEHAVIOR
PInvoke.User32.DPI_HOSTING_BEHAVIOR.DPI_HOSTING_BEHAVIOR_MIXED = 1 -> PInvoke.User32.DPI_HOSTING_BEHAVIOR
PInvoke.User32.GetMenuDefaultItemFlags
PInvoke.User32.GetMenuDefaultItemFlags.GMDI_GOINTOPOPUPS = 2 -> PInvoke.User32.GetMenuDefaultItemFlags
PInvoke.User32.GetMenuDefaultItemFlags.GMDI_USEDISABLED = 1 -> PInvoke.User32.GetMenuDefaultItemFlags
PInvoke.User32.GetMenuStateFlags
PInvoke.User32.GetMenuStateFlags.MF_BYCOMMAND = 0 -> PInvoke.User32.GetMenuStateFlags
PInvoke.User32.GetMenuStateFlags.MF_BYPOSITION = 1024 -> PInvoke.User32.GetMenuStateFlags
PInvoke.User32.GetNextWindowCommands
PInvoke.User32.GetNextWindowCommands.GW_HWNDNEXT = 2 -> PInvoke.User32.GetNextWindowCommands
PInvoke.User32.GetNextWindowCommands.GW_HWNDPREV = 3 -> PInvoke.User32.GetNextWindowCommands
PInvoke.User32.GetWindowCommands
PInvoke.User32.GetWindowCommands.GW_CHILD = 5 -> PInvoke.User32.GetWindowCommands
PInvoke.User32.GetWindowCommands.GW_ENABLEDPOPUP = 6 -> PInvoke.User32.GetWindowCommands
PInvoke.User32.GetWindowCommands.GW_HWNDFIRST = 0 -> PInvoke.User32.GetWindowCommands
PInvoke.User32.GetWindowCommands.GW_HWNDLAST = 1 -> PInvoke.User32.GetWindowCommands
PInvoke.User32.GetWindowCommands.GW_HWNDNEXT = 2 -> PInvoke.User32.GetWindowCommands
PInvoke.User32.GetWindowCommands.GW_HWNDPREV = 3 -> PInvoke.User32.GetWindowCommands
PInvoke.User32.GetWindowCommands.GW_OWNER = 4 -> PInvoke.User32.GetWindowCommands
PInvoke.User32.ImageType
PInvoke.User32.ImageType.IMAGE_BITMAP = 0 -> PInvoke.User32.ImageType
PInvoke.User32.ImageType.IMAGE_CURSOR = 2 -> PInvoke.User32.ImageType
PInvoke.User32.ImageType.IMAGE_ICON = 1 -> PInvoke.User32.ImageType
PInvoke.User32.LoadImageFlags
PInvoke.User32.LoadImageFlags.LR_CREATEDIBSECTION = 8192 -> PInvoke.User32.LoadImageFlags
PInvoke.User32.LoadImageFlags.LR_DEFAULTCOLOR = 0 -> PInvoke.User32.LoadImageFlags
PInvoke.User32.LoadImageFlags.LR_DEFAULTSIZE = 64 -> PInvoke.User32.LoadImageFlags
PInvoke.User32.LoadImageFlags.LR_LOADFROMFILE = 16 -> PInvoke.User32.LoadImageFlags
PInvoke.User32.LoadImageFlags.LR_LOADMAP3DCOLORS = 4096 -> PInvoke.User32.LoadImageFlags
PInvoke.User32.LoadImageFlags.LR_LOADTRANSPARENT = 32 -> PInvoke.User32.LoadImageFlags
PInvoke.User32.LoadImageFlags.LR_MONOCHROME = 1 -> PInvoke.User32.LoadImageFlags
PInvoke.User32.LoadImageFlags.LR_SHARED = 32768 -> PInvoke.User32.LoadImageFlags
PInvoke.User32.LoadImageFlags.LR_VGACOLOR = 128 -> PInvoke.User32.LoadImageFlags
PInvoke.User32.MENUBARINFO
PInvoke.User32.MENUBARINFO.MENUBARINFO() -> void
PInvoke.User32.MENUBARINFO.cbSize -> int
PInvoke.User32.MENUBARINFO.fBarFocused.get -> bool
PInvoke.User32.MENUBARINFO.fBarFocused.set -> void
PInvoke.User32.MENUBARINFO.fFocused.get -> bool
PInvoke.User32.MENUBARINFO.fFocused.set -> void
PInvoke.User32.MENUBARINFO.hMenu -> System.IntPtr
PInvoke.User32.MENUBARINFO.hwndMenu -> System.IntPtr
PInvoke.User32.MENUBARINFO.rcBar -> PInvoke.RECT
PInvoke.User32.MENUINFO
PInvoke.User32.MENUINFO.Create() -> PInvoke.User32.MENUINFO
PInvoke.User32.MENUINFO.MENUINFO() -> void
PInvoke.User32.MENUINFO.cbSize -> int
PInvoke.User32.MENUINFO.cyMax -> uint
PInvoke.User32.MENUINFO.dwContextHelpID -> uint
PInvoke.User32.MENUINFO.dwMenuData -> System.UIntPtr
PInvoke.User32.MENUINFO.dwStyle -> PInvoke.User32.MenuInfoStyle
PInvoke.User32.MENUINFO.fMask -> PInvoke.User32.MenuInfoMask
PInvoke.User32.MENUINFO.hbrBack -> System.IntPtr
PInvoke.User32.MENUITEMINFO.dwTypeData_IntPtr.get -> System.IntPtr
PInvoke.User32.MENUITEMINFO.dwTypeData_IntPtr.set -> void
PInvoke.User32.MenuInfoMask
PInvoke.User32.MenuInfoMask.MIM_APPLYTOSUBMENUS = 2147483648 -> PInvoke.User32.MenuInfoMask
PInvoke.User32.MenuInfoMask.MIM_BACKGROUND = 2 -> PInvoke.User32.MenuInfoMask
PInvoke.User32.MenuInfoMask.MIM_HELPID = 4 -> PInvoke.User32.MenuInfoMask
PInvoke.User32.MenuInfoMask.MIM_MAXHEIGHT = 1 -> PInvoke.User32.MenuInfoMask
PInvoke.User32.MenuInfoMask.MIM_MENUDATA = 8 -> PInvoke.User32.MenuInfoMask
PInvoke.User32.MenuInfoMask.MIM_STYLE = 16 -> PInvoke.User32.MenuInfoMask
PInvoke.User32.MenuInfoStyle
PInvoke.User32.MenuInfoStyle.MNS_AUTODISMISS = 268435456 -> PInvoke.User32.MenuInfoStyle
PInvoke.User32.MenuInfoStyle.MNS_CHECKORBMP = 67108864 -> PInvoke.User32.MenuInfoStyle
PInvoke.User32.MenuInfoStyle.MNS_DRAGDROP = 536870912 -> PInvoke.User32.MenuInfoStyle
PInvoke.User32.MenuInfoStyle.MNS_MODELESS = 1073741824 -> PInvoke.User32.MenuInfoStyle
PInvoke.User32.MenuInfoStyle.MNS_NOCHECK = 2147483648 -> PInvoke.User32.MenuInfoStyle
PInvoke.User32.MenuInfoStyle.MNS_NOTIFYBYPOS = 134217728 -> PInvoke.User32.MenuInfoStyle
PInvoke.User32.MenuObject
PInvoke.User32.MenuObject.OBJID_CLIENT = 4294967292 -> PInvoke.User32.MenuObject
PInvoke.User32.MenuObject.OBJID_MENU = 4294967293 -> PInvoke.User32.MenuObject
PInvoke.User32.MenuObject.OBJID_SYSMENU = 4294967295 -> PInvoke.User32.MenuObject
PInvoke.User32.SafeCursorHandle
PInvoke.User32.SafeCursorHandle.SafeCursorHandle() -> void
PInvoke.User32.SafeCursorHandle.SafeCursorHandle(System.IntPtr preexistingHandle, bool ownsHandle = true) -> void
PInvoke.User32.SendMessageTimeoutFlags
PInvoke.User32.SendMessageTimeoutFlags.SMTO_ABORTIFHUNG = 2 -> PInvoke.User32.SendMessageTimeoutFlags
PInvoke.User32.SendMessageTimeoutFlags.SMTO_BLOCK = 1 -> PInvoke.User32.SendMessageTimeoutFlags
PInvoke.User32.SendMessageTimeoutFlags.SMTO_ERRORONEXIT = 32 -> PInvoke.User32.SendMessageTimeoutFlags
PInvoke.User32.SendMessageTimeoutFlags.SMTO_NORMAL = 0 -> PInvoke.User32.SendMessageTimeoutFlags
PInvoke.User32.SendMessageTimeoutFlags.SMTO_NOTIMEOUTIFNOTHUNG = 8 -> PInvoke.User32.SendMessageTimeoutFlags
PInvoke.User32.WindowLongIndexFlags.GWLP_ID = PInvoke.User32.WindowLongIndexFlags.GWL_STYLE | PInvoke.User32.WindowLongIndexFlags.DWLP_DLGPROC -> PInvoke.User32.WindowLongIndexFlags
PInvoke.User32.WindowLongIndexFlags.GWLP_USERDATA = -21 -> PInvoke.User32.WindowLongIndexFlags
PInvoke.User32.WindowLongIndexFlags.GWLP_WNDPROC = PInvoke.User32.WindowLongIndexFlags.GWL_STYLE | PInvoke.User32.WindowLongIndexFlags.DWLP_DLGPROC | PInvoke.User32.WindowLongIndexFlags.DWLP_USER -> PInvoke.User32.WindowLongIndexFlags
PInvoke.User32.WindowMessage.WM_DPICHANGED_AFTERPARENT = 739 -> PInvoke.User32.WindowMessage
PInvoke.User32.WindowMessage.WM_DPICHANGED_BEFOREPARENT = 738 -> PInvoke.User32.WindowMessage
PInvoke.User32.WindowMessage.WM_GETDPISCALEDSIZE = 740 -> PInvoke.User32.WindowMessage
PInvoke.User32.mouse_eventFlags
PInvoke.User32.mouse_eventFlags.MOUSEEVENTF_ABSOLUTE = 32768 -> PInvoke.User32.mouse_eventFlags
PInvoke.User32.mouse_eventFlags.MOUSEEVENTF_HWHEEL = 4096 -> PInvoke.User32.mouse_eventFlags
PInvoke.User32.mouse_eventFlags.MOUSEEVENTF_LEFTDOWN = 2 -> PInvoke.User32.mouse_eventFlags
PInvoke.User32.mouse_eventFlags.MOUSEEVENTF_LEFTUP = 4 -> PInvoke.User32.mouse_eventFlags
PInvoke.User32.mouse_eventFlags.MOUSEEVENTF_MIDDLEDOWN = 32 -> PInvoke.User32.mouse_eventFlags
PInvoke.User32.mouse_eventFlags.MOUSEEVENTF_MIDDLEUP = 64 -> PInvoke.User32.mouse_eventFlags
PInvoke.User32.mouse_eventFlags.MOUSEEVENTF_MOVE = 1 -> PInvoke.User32.mouse_eventFlags
PInvoke.User32.mouse_eventFlags.MOUSEEVENTF_RIGHTDOWN = 8 -> PInvoke.User32.mouse_eventFlags
PInvoke.User32.mouse_eventFlags.MOUSEEVENTF_RIGHTUP = 16 -> PInvoke.User32.mouse_eventFlags
PInvoke.User32.mouse_eventFlags.MOUSEEVENTF_WHEEL = 2048 -> PInvoke.User32.mouse_eventFlags
PInvoke.User32.mouse_eventFlags.MOUSEEVENTF_XDOWN = 128 -> PInvoke.User32.mouse_eventFlags
PInvoke.User32.mouse_eventFlags.MOUSEEVENTF_XUP = 256 -> PInvoke.User32.mouse_eventFlags
override PInvoke.User32.SafeCursorHandle.IsInvalid.get -> bool
override PInvoke.User32.SafeCursorHandle.ReleaseHandle() -> bool
static PInvoke.User32.AdjustWindowRectEx(System.IntPtr lpRect, PInvoke.User32.WindowStyles dwStyle, bool bMenu, PInvoke.User32.WindowStylesEx dwExStyle) -> bool
static PInvoke.User32.AdjustWindowRectExForDpi(System.IntPtr lpRect, PInvoke.User32.WindowStyles dwStyle, bool bMenu, PInvoke.User32.WindowStylesEx dwExStyle, int dpi) -> bool
static PInvoke.User32.CURSORINFO.Create() -> PInvoke.User32.CURSORINFO
static PInvoke.User32.CreateCursor(System.IntPtr hInst, int xHotspot, int yHotSpot, int nWidth, int nHeight, System.IntPtr pvANDPlane, System.IntPtr pvXORPlane) -> PInvoke.User32.SafeCursorHandle
static PInvoke.User32.CreateCursor(System.IntPtr hInst, int xHotspot, int yHotSpot, int nWidth, int nHeight, byte[] pvANDPlane, byte[] pvXORPlane) -> PInvoke.User32.SafeCursorHandle
static PInvoke.User32.CreateWindowEx(PInvoke.User32.WindowStylesEx dwExStyle, short lpClassName, string lpWindowName, PInvoke.User32.WindowStyles dwStyle, int x, int y, int nWidth, int nHeight, System.IntPtr hWndParent, System.IntPtr hMenu, System.IntPtr hInstance, System.IntPtr lpParam) -> System.IntPtr
static PInvoke.User32.CreateWindowEx(PInvoke.User32.WindowStylesEx dwExStyle, short lpClassName, string lpWindowName, PInvoke.User32.WindowStyles dwStyle, int x, int y, int nWidth, int nHeight, System.IntPtr hWndParent, System.IntPtr hMenu, System.IntPtr hInstance, void* lpParam) -> System.IntPtr
static PInvoke.User32.GetCursorInfo(System.IntPtr pci) -> bool
static PInvoke.User32.GetCursorInfo(out PInvoke.User32.CURSORINFO pci) -> bool
static PInvoke.User32.GetMenuBarInfo(System.IntPtr hwnd, PInvoke.User32.MenuObject idObject, int idItem, System.IntPtr pmbi) -> bool
static PInvoke.User32.GetMenuInfo(System.IntPtr hMenu, System.IntPtr lpMenuInfo) -> bool
static PInvoke.User32.GetMenuItemInfo(System.IntPtr hMenu, uint uItem, bool fByPosition, System.IntPtr lpmii) -> bool
static PInvoke.User32.GetMenuItemInfo(System.IntPtr hMenu, uint uItem, bool fByPosition, ref PInvoke.User32.MENUITEMINFO lpmii) -> bool
static PInvoke.User32.GetMenuItemRect(System.IntPtr hWnd, System.IntPtr hMenu, uint uItem, System.IntPtr lprcItem) -> bool
static PInvoke.User32.GetMenuString(System.IntPtr hMenu, uint uIDItem, System.IntPtr lpString, int cchMax, PInvoke.User32.GetMenuStateFlags flags) -> int
static PInvoke.User32.GetMenuString(System.IntPtr hMenu, uint uIDItem, char[] lpString, int cchMax, PInvoke.User32.GetMenuStateFlags flags) -> int
static PInvoke.User32.GetNextWindow(System.IntPtr hWnd, PInvoke.User32.GetNextWindowCommands wCmd) -> System.IntPtr
static PInvoke.User32.LoadCursor(System.IntPtr hInstance, System.IntPtr lpCursorName) -> PInvoke.User32.SafeCursorHandle
static PInvoke.User32.LoadCursor(System.IntPtr hInstance, char[] lpCursorName) -> PInvoke.User32.SafeCursorHandle
static PInvoke.User32.LoadImage(System.IntPtr hInst, System.IntPtr name, PInvoke.User32.ImageType type, int cx, int cy, PInvoke.User32.LoadImageFlags fuLoad) -> System.IntPtr
static PInvoke.User32.LoadImage(System.IntPtr hInst, char[] name, PInvoke.User32.ImageType type, int cx, int cy, PInvoke.User32.LoadImageFlags fuLoad) -> System.IntPtr
static PInvoke.User32.MENUBARINFO.Create() -> PInvoke.User32.MENUBARINFO
static PInvoke.User32.SetMenuItemInfo(System.IntPtr hMenu, uint uItem, bool fByPosition, PInvoke.User32.MENUITEMINFO lpmii) -> bool
static PInvoke.User32.SetMenuItemInfo(System.IntPtr hMenu, uint uItem, bool fByPosition, System.IntPtr lpmii) -> bool
static PInvoke.User32.SetWindowLongPtr(System.IntPtr hWnd, PInvoke.User32.WindowLongIndexFlags nIndex, System.IntPtr dwNewLong) -> System.IntPtr
static PInvoke.User32.SetWindowLongPtr(System.IntPtr hWnd, PInvoke.User32.WindowLongIndexFlags nIndex, void* dwNewLong) -> void*
static PInvoke.User32.SystemParametersInfoForDpi(PInvoke.User32.SystemParametersInfoAction uiAction, int uiParam, System.IntPtr pvParam, PInvoke.User32.SystemParametersInfoFlags fWinIni, int dpi) -> bool
static PInvoke.User32.mouse_event(PInvoke.User32.mouse_eventFlags dwFlags, int dx, int dy, int dwData, System.IntPtr dwExtraInfo) -> void
static extern PInvoke.User32.AdjustWindowRectEx(PInvoke.RECT* lpRect, PInvoke.User32.WindowStyles dwStyle, bool bMenu, PInvoke.User32.WindowStylesEx dwExStyle) -> bool
static extern PInvoke.User32.AdjustWindowRectExForDpi(PInvoke.RECT* lpRect, PInvoke.User32.WindowStyles dwStyle, bool bMenu, PInvoke.User32.WindowStylesEx dwExStyle, int dpi) -> bool
static extern PInvoke.User32.AreDpiAwarenessContextsEqual(System.IntPtr dpiContextA, System.IntPtr dpiContextB) -> bool
static extern PInvoke.User32.CreateCursor(System.IntPtr hInst, int xHotspot, int yHotSpot, int nWidth, int nHeight, byte* pvANDPlane, byte* pvXORPlane) -> PInvoke.User32.SafeCursorHandle
static extern PInvoke.User32.DestroyWindow(System.IntPtr hWnd) -> bool
static extern PInvoke.User32.EnableNonClientDpiScaling(System.IntPtr hwnd) -> bool
static extern PInvoke.User32.GetAwarenessFromDpiAwarenessContext(System.IntPtr dpiAwarenessContext) -> PInvoke.User32.DPI_AWARENESS
static extern PInvoke.User32.GetCursor() -> PInvoke.User32.SafeCursorHandle
static extern PInvoke.User32.GetCursorInfo(PInvoke.User32.CURSORINFO* pci) -> bool
static extern PInvoke.User32.GetDialogControlDpiChangeBehavior(System.IntPtr hWnd) -> PInvoke.User32.DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS
static extern PInvoke.User32.GetDialogDpiChangeBehavior(System.IntPtr hDlg) -> PInvoke.User32.DIALOG_DPI_CHANGE_BEHAVIORS
static extern PInvoke.User32.GetDpiForSystem() -> int
static extern PInvoke.User32.GetDpiForWindow(System.IntPtr hwnd) -> int
static extern PInvoke.User32.GetDpiFromDpiAwarenessContext(System.IntPtr dpiAwarenessContext) -> int
static extern PInvoke.User32.GetMenu(System.IntPtr hWnd) -> System.IntPtr
static extern PInvoke.User32.GetMenuBarInfo(System.IntPtr hwnd, PInvoke.User32.MenuObject idObject, int idItem, PInvoke.User32.MENUBARINFO* pmbi) -> bool
static extern PInvoke.User32.GetMenuCheckMarkDimensions() -> int
static extern PInvoke.User32.GetMenuContextHelpId(System.IntPtr hMenu) -> uint
static extern PInvoke.User32.GetMenuDefaultItem(System.IntPtr hMenu, uint fByPos, PInvoke.User32.GetMenuDefaultItemFlags gmdiFlags) -> uint
static extern PInvoke.User32.GetMenuInfo(System.IntPtr hMenu, PInvoke.User32.MENUINFO* lpMenuInfo) -> bool
static extern PInvoke.User32.GetMenuItemCount(System.IntPtr hMenu) -> int
static extern PInvoke.User32.GetMenuItemId(System.IntPtr hMenu, int nPos) -> uint
static extern PInvoke.User32.GetMenuItemRect(System.IntPtr hWnd, System.IntPtr hMenu, uint uItem, PInvoke.RECT* lprcItem) -> bool
static extern PInvoke.User32.GetMenuState(System.IntPtr hMenu, uint uId, PInvoke.User32.GetMenuStateFlags uFlags) -> uint
static extern PInvoke.User32.GetMenuString(System.IntPtr hMenu, uint uIDItem, char* lpString, int cchMax, PInvoke.User32.GetMenuStateFlags flags) -> int
static extern PInvoke.User32.GetSubMenu(System.IntPtr hMenu, int nPos) -> System.IntPtr
static extern PInvoke.User32.GetSystemDpiForProcess(PInvoke.Kernel32.SafeObjectHandle hProcess) -> int
static extern PInvoke.User32.GetSystemMetricsForDpi(int nIndex, int dpi) -> int
static extern PInvoke.User32.GetThreadDpiAwarenessContext() -> System.IntPtr
static extern PInvoke.User32.GetThreadDpiHostingBehavior() -> PInvoke.User32.DPI_HOSTING_BEHAVIOR
static extern PInvoke.User32.GetTopWindow(System.IntPtr hWnd) -> System.IntPtr
static extern PInvoke.User32.GetWindow(System.IntPtr hWnd, PInvoke.User32.GetWindowCommands wCmd) -> System.IntPtr
static extern PInvoke.User32.GetWindowDpiAwarenessContext(System.IntPtr hwnd) -> System.IntPtr
static extern PInvoke.User32.GetWindowDpiHostingBehavior(System.IntPtr hwnd) -> PInvoke.User32.DPI_HOSTING_BEHAVIOR
static extern PInvoke.User32.IsValidDpiAwarenessContext(System.IntPtr dpiAwarenessContext) -> bool
static extern PInvoke.User32.LoadCursor(System.IntPtr hInstance, char* lpCursorName) -> PInvoke.User32.SafeCursorHandle
static extern PInvoke.User32.LoadImage(System.IntPtr hInst, char* name, PInvoke.User32.ImageType type, int cx, int cy, PInvoke.User32.LoadImageFlags fuLoad) -> System.IntPtr
static extern PInvoke.User32.SendMessageTimeout(System.IntPtr hWnd, PInvoke.User32.WindowMessage msg, System.IntPtr wParam, System.IntPtr lParam, PInvoke.User32.SendMessageTimeoutFlags flags, int timeout, out System.IntPtr pdwResult) -> System.IntPtr
static extern PInvoke.User32.SetCursor(PInvoke.User32.SafeCursorHandle hCursor) -> PInvoke.User32.SafeCursorHandle
static extern PInvoke.User32.SetDialogControlDpiChangeBehavior(System.IntPtr hwnd, PInvoke.User32.DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS mask, PInvoke.User32.DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS values) -> bool
static extern PInvoke.User32.SetDialogDpiChangeBehavior(System.IntPtr hDlg, PInvoke.User32.DIALOG_DPI_CHANGE_BEHAVIORS mask, PInvoke.User32.DIALOG_DPI_CHANGE_BEHAVIORS values) -> bool
static extern PInvoke.User32.SetLastErrorEx(uint dwErrCode, uint dwType) -> void
static extern PInvoke.User32.SetMenuContextHelpId(System.IntPtr hMenu, uint helpId) -> uint
static extern PInvoke.User32.SetProcessDpiAwarenessContext(System.IntPtr dpiAWarenessContext) -> bool
static extern PInvoke.User32.SetThreadDpiAwarenessContext(System.IntPtr dpiContext) -> System.IntPtr
static extern PInvoke.User32.SetThreadDpiHostingBehavior(PInvoke.User32.DPI_HOSTING_BEHAVIOR dpiHostingBehavior) -> PInvoke.User32.DPI_HOSTING_BEHAVIOR
static extern PInvoke.User32.SetWindowText(System.IntPtr hWnd, string lpString) -> bool
static extern PInvoke.User32.ShowCursor(bool bShow) -> int
static extern PInvoke.User32.SystemParametersInfoForDpi(PInvoke.User32.SystemParametersInfoAction uiAction, int uiParam, void* pvParam, PInvoke.User32.SystemParametersInfoFlags fWinIni, int dpi) -> bool
static extern PInvoke.User32.mouse_event(PInvoke.User32.mouse_eventFlags dwFlags, int dx, int dy, int dwData, void* dwExtraInfo) -> void
static readonly PInvoke.User32.DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE -> System.IntPtr
static readonly PInvoke.User32.DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2 -> System.IntPtr
static readonly PInvoke.User32.DPI_AWARENESS_CONTEXT_SYSTEM_AWARE -> System.IntPtr
static readonly PInvoke.User32.DPI_AWARENESS_CONTEXT_UNAWARE -> System.IntPtr
static readonly PInvoke.User32.SafeCursorHandle.Null -> PInvoke.User32.SafeCursorHandle